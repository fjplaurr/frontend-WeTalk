{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/TextInputSettings/TextInputSettings.component.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport styles from './TextInputSettings.module.scss';\n\nconst TextInputSettings = ({\n  type,\n  onChange,\n  placeholder,\n  minLength,\n  initialValue,\n  idInput,\n  textLabel\n}) => {\n  const [value, setValue] = useState(''); // Sets initial value if it is provided\n\n  useEffect(() => {\n    initialValue && setValue(initialValue);\n  }, []);\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: idInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, textLabel), /*#__PURE__*/React.createElement(\"input\", {\n    id: idInput,\n    className: styles.inputWhite,\n    placeholder: placeholder,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    minLength: minLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TextInputSettings;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/TextInputSettings/TextInputSettings.component.tsx"],"names":["React","useState","useEffect","styles","TextInputSettings","type","onChange","placeholder","minLength","initialValue","idInput","textLabel","value","setValue","stateChange","event","target","container","inputWhite"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,MAAP,MAAmB,iCAAnB;;AAYA,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,IADyB;AACnBC,EAAAA,QADmB;AACTC,EAAAA,WADS;AACIC,EAAAA,SADJ;AAEzBC,EAAAA,YAFyB;AAEXC,EAAAA,OAFW;AAEFC,EAAAA;AAFE,CAAD,KAGI;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC,CAD4B,CAG5B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,YAAY,IAAII,QAAQ,CAACJ,YAAD,CAAxB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,WAAuD,GAAIC,KAAD,IAAW;AACzET,IAAAA,QAAQ,IAAIA,QAAQ,CAACS,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAKA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAET,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAEP,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BC,SAA1B,CADF,eAEE;AACE,IAAA,EAAE,EAAED,OADN;AAEE,IAAA,SAAS,EAAEP,MAAM,CAACe,UAFpB;AAGE,IAAA,WAAW,EAAEX,WAHf;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEO,WALZ;AAME,IAAA,KAAK,EAAEF,KANT;AAOE,IAAA,IAAI,EAAEP,IAPR;AAQE,IAAA,SAAS,EAAEG,SARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAiBD,CAjCD;;AAmCA,eAAeJ,iBAAf","sourcesContent":["import React, { useState, ReactNode, useEffect } from 'react';\nimport styles from './TextInputSettings.module.scss';\n\ntype TextInputSettingsProps = {\n  type: 'text' | 'email' | 'password';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  minLength?: number;\n  initialValue?: string;\n  idInput: string,\n  textLabel: string,\n}\n\nconst TextInputSettings = ({\n  type, onChange, placeholder, minLength,\n  initialValue, idInput, textLabel\n}: TextInputSettingsProps) => {\n  const [value, setValue] = useState('');\n\n  // Sets initial value if it is provided\n  useEffect(() => {\n    initialValue && setValue(initialValue);\n  }, []);\n\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        <label htmlFor={idInput}>{textLabel}</label>\n        <input\n          id={idInput}\n          className={styles.inputWhite}\n          placeholder={placeholder}\n          required\n          onChange={stateChange}\n          value={value}\n          type={type}\n          minLength={minLength}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default TextInputSettings;\n"]},"metadata":{},"sourceType":"module"}