{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user, _contextUser$user2, _contextUser$user3, _contextUser$user4;\n\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [hasChangedDescription, setHasChangedDescription] = useState(false);\n  const [description, setDescription] = useState('');\n  const [errorSelectedFile, setErrorSelectedFile] = useState(''); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the profile configuration window\n\n  const wrapperRef = useRef(null); // Ref for the input to select picture\n\n  const pictureRef = useRef(null); // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShowConfiguration(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n    setHasChangedDescription(true);\n  };\n\n  const handleChangePicture = async () => {\n    var _pictureRef$current;\n\n    const file = (pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current = pictureRef.current) === null || _pictureRef$current === void 0 ? void 0 : _pictureRef$current.files)[0]; // Updates profile image in database\n\n    const response = await uploadEndpoints.postPicture(file);\n\n    if (response.location) {\n      const modifUser = { ...contextUser.user,\n        profileImage: response.location\n      }; // Updates profile image url in database\n\n      userEndpoints.update(modifUser); // Updates profile image url in context user\n\n      contextUser.setUser(modifUser);\n    }\n\n    if (response.error) {\n      setErrorSelectedFile(response.error.message);\n    }\n  };\n\n  const onConfigurationSubmit = async event => {\n    event.preventDefault();\n\n    if (hasChangedDescription) {\n      // Updates description in database\n      const modifiedUser = { ...contextUser.user,\n        description\n      }; // Updates description in database\n\n      userEndpoints.update(modifiedUser); // Updates description in context user\n\n      contextUser.setUser(modifiedUser);\n    }\n  };\n\n  const configurationForm = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onConfigurationSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : _contextUser$user.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Env\\xEDa\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: pictureRef,\n    onChange: handleChangePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: () => setShowConfiguration(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageWrapper,\n    style: {\n      backgroundImage: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : _contextUser$user3.profileImage) ? `url(${contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : _contextUser$user4.profileImage})` : `url(${profileImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), configurationForm)));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","styles","UserContext","profileImage","userEndpoints","uploadEndpoints","ConfigureProfile","showConfiguration","setShowConfiguration","hasChangedDescription","setHasChangedDescription","description","setDescription","errorSelectedFile","setErrorSelectedFile","contextUser","wrapperRef","pictureRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDescriptionChange","value","handleChangePicture","file","files","response","postPicture","location","modifUser","user","update","setUser","error","message","onConfigurationSubmit","preventDefault","modifiedUser","configurationForm","configureProfileContainer","iconButton","profileIcon","configurationTargetShow","configurationTargetHide","imageWrapper","backgroundImage"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport { User } from '../../../interfaces/User';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [hasChangedDescription, setHasChangedDescription] = useState(false);\n  const [description, setDescription] = useState<string | undefined>('');\n  const [errorSelectedFile, setErrorSelectedFile] = useState('');\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the profile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Ref for the input to select picture\n  const pictureRef = useRef<HTMLInputElement>(null);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        setShowConfiguration(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n    setHasChangedDescription(true);\n  };\n\n  const handleChangePicture = async () => {\n    const file: File = pictureRef?.current?.files![0]!;\n    // Updates profile image in database\n   \n    const response = await uploadEndpoints.postPicture(file!);\n    if (response.location) {\n      const modifUser: User = { ...contextUser.user!, profileImage: response.location };\n      // Updates profile image url in database\n      userEndpoints.update(modifUser);\n      // Updates profile image url in context user\n      contextUser.setUser(modifUser);\n    }\n    if (response.error) {\n      setErrorSelectedFile(response.error.message);\n    }\n  };\n\n  const onConfigurationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (hasChangedDescription) {\n      // Updates description in database\n      const modifiedUser: User = { ...contextUser.user!, description };\n      // Updates description in database\n      userEndpoints.update(modifiedUser);\n      // Updates description in context user\n      contextUser.setUser(modifiedUser);\n    }\n\n  };\n\n  const configurationForm = (\n    <>\n      <form onSubmit={onConfigurationSubmit}>\n        <input\n          type=\"text\"\n          value={contextUser?.user?.description || 'What is going on?'}\n          onChange={handleDescriptionChange}\n        />\n        <input\n          type=\"text\"\n          value={contextUser?.user?.description || 'What is going on?'}\n          onChange={handleDescriptionChange}\n        />\n        <button type=\"submit\">Envía</button>\n      </form>\n      <input\n        type=\"file\"\n        ref={pictureRef}\n        onChange={handleChangePicture}\n      />\n    </>\n  );\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={() => setShowConfiguration(true)}\n        >\n          <FiUser className={styles.profileIcon} />\n        </button>\n        <div\n          ref={wrapperRef}\n          className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide}\n        >\n          <div\n            className={styles.imageWrapper}\n            style={{\n              backgroundImage: contextUser?.user?.profileImage ? `url(${contextUser?.user?.profileImage})` : `url(${profileImage})`,\n            }}\n          />\n          {configurationForm}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}