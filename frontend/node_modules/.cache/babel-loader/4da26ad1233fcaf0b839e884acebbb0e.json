{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx\";\nimport React, { useState } from 'react';\n\nconst TextInput = ({\n  id,\n  type,\n  onChange,\n  labelText\n}) => {\n  const [value, setValue] = useState('');\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, labelText, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx"],"names":["React","useState","TextInput","id","type","onChange","labelText","value","setValue","stateChange","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AASA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,EADiB;AACbC,EAAAA,IADa;AACPC,EAAAA,QADO;AACGC,EAAAA;AADH,CAAD,KAEI;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,WAAuD,GAAIC,KAAD,IAAW;AACzEL,IAAAA,QAAQ,IAAIA,QAAQ,CAACK,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAIA,sBACE,uDACE;AAAO,IAAA,OAAO,EAAEJ,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,SADH,eAEE;AAAO,IAAA,EAAE,EAAEH,EAAX;AAAe,IAAA,QAAQ,MAAvB;AAAwB,IAAA,QAAQ,EAAEM,WAAlC;AAA+C,IAAA,KAAK,EAAEF,KAAtD;AAA6D,IAAA,IAAI,EAAEH,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAQD,CAhBD;;AAkBA,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react';\n\ntype TextInputProps = {\n  labelText: string;\n  id: string;\n  type: 'text' | 'email';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst TextInput = ({\n  id, type, onChange, labelText,\n}: TextInputProps) => {\n  const [value, setValue] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n  return (\n    <>\n      <label htmlFor={id}>\n        {labelText}\n        <input id={id} required onChange={stateChange} value={value} type={type} />\n      </label>\n    </>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}