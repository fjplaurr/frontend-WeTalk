{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBar.component.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport TextInput from '../TextInput';\nimport ProfileCard from '../ProfileCard';\nimport * as userEndpoints from '../../endpoints/user';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userResults, setUserResults] = useState([]); // Sets searched term while writing\n\n  const handleChange = e => {\n    setSearchTerm(e.currentTarget.value);\n  }; // Makes a search every time the user inputs a carachter\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await userEndpoints.getPostsFromFollowedUsers(searchTerm);\n      setUserResults(users);\n    };\n  }, [searchTerm]);\n\n  const unfollowUser = async (event, clickedUser) => {\n    const {\n      user: currentUser\n    } = contextUser;\n    const followingModified = currentUser.following.filter(el => el.user !== clickedUser._id);\n    const modifiedUser = { ...currentUser,\n      following: followingModified\n    }; // Modify user in context\n\n    await contextUser.setUser(modifiedUser); // Modify list of followed users in database\n\n    await userEndpoints.update(modifiedUser);\n  };\n\n  const searchWindow = userResults.map(user => {\n    var _user$profileImage;\n\n    return /*#__PURE__*/React.createElement(ProfileCard, {\n      description: user.description,\n      name: user.name,\n      surname: user.surname,\n      pictureUrl: (_user$profileImage = user.profileImage) === null || _user$profileImage === void 0 ? void 0 : _user$profileImage.url,\n      onClick: e => unfollowUser(e, user),\n      textButton: \"Unfollow\",\n      colorButton: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), searchTerm && searchWindow);\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBar.component.tsx"],"names":["React","useState","useEffect","TextInput","ProfileCard","userEndpoints","SearchBar","searchTerm","setSearchTerm","userResults","setUserResults","handleChange","e","currentTarget","value","fetchUsers","users","getPostsFromFollowedUsers","unfollowUser","event","clickedUser","user","currentUser","contextUser","followingModified","following","filter","el","_id","modifiedUser","setUser","update","searchWindow","map","description","name","surname","profileImage","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAS,EAAT,CAA9C,CAFsB,CAItB;;AACA,QAAMU,YAAY,GAAIC,CAAD,IAA4C;AAC/DJ,IAAAA,aAAa,CAACI,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAb;AACD,GAFD,CALsB,CAStB;;;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,UAAU,GAAG,YAAY;AAC7B,YAAMC,KAAa,GAAG,MAAMX,aAAa,CAACY,yBAAd,CAAwCV,UAAxC,CAA5B;AACAG,MAAAA,cAAc,CAACM,KAAD,CAAd;AACD,KAHD;AAID,GALQ,EAKN,CAACT,UAAD,CALM,CAAT;;AAOA,QAAMW,YAAY,GAAG,OAAOC,KAAP,EAAmDC,WAAnD,KAAyE;AAC5F,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAwBC,WAA9B;AACA,UAAMC,iBAAiB,GAAGF,WAAW,CAAEG,SAAb,CAAwBC,MAAxB,CAAgCC,EAAD,IAAQA,EAAE,CAACN,IAAH,KAAYD,WAAW,CAACQ,GAA/D,CAA1B;AACA,UAAMC,YAAkB,GAAG,EAAE,GAAGP,WAAL;AAAmBG,MAAAA,SAAS,EAAED;AAA9B,KAA3B,CAH4F,CAI5F;;AACA,UAAMD,WAAW,CAACO,OAAZ,CAAoBD,YAApB,CAAN,CAL4F,CAM5F;;AACA,UAAMxB,aAAa,CAAC0B,MAAd,CAAqBF,YAArB,CAAN;AACD,GARD;;AAUA,QAAMG,YAAY,GAAGvB,WAAW,CAACwB,GAAZ,CAAiBZ,IAAD,IAAgB;AAAA;;AACnD,wBACE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEA,IAAI,CAACa,WADpB;AAEE,MAAA,IAAI,EAAEb,IAAI,CAACc,IAFb;AAGE,MAAA,OAAO,EAAEd,IAAI,CAACe,OAHhB;AAIE,MAAA,UAAU,wBAAEf,IAAI,CAACgB,YAAP,uDAAE,mBAAmBC,GAJjC;AAKE,MAAA,OAAO,EAAG1B,CAAD,IAAOM,YAAY,CAACN,CAAD,EAAIS,IAAJ,CAL9B;AAME,MAAA,UAAU,EAAC,UANb;AAOE,MAAA,WAAW,EAAC,KAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAZoB,CAArB;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,MAAhB;AAAuB,IAAA,WAAW,EAAC,QAAnC;AAA4C,IAAA,QAAQ,EAAEV,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGJ,UAAU,IAAIyB,YAFjB,CADF;AAMD,CA/CD;;AAiDA,eAAe1B,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TextInput from '../TextInput';\nimport ProfileCard from '../ProfileCard';\nimport { User } from '../../interfaces/User';\nimport * as userEndpoints from '../../endpoints/user';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userResults, setUserResults] = useState<User[]>([]);\n\n  // Sets searched term while writing\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  // Makes a search every time the user inputs a carachter\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users: User[] = await userEndpoints.getPostsFromFollowedUsers(searchTerm);\n      setUserResults(users);\n    };\n  }, [searchTerm]);\n\n  const unfollowUser = async (event: React.MouseEvent<HTMLButtonElement>, clickedUser: User) => {\n    const { user: currentUser } = contextUser;\n    const followingModified = currentUser!.following!.filter((el) => el.user !== clickedUser._id);\n    const modifiedUser: User = { ...currentUser!, following: followingModified };\n    // Modify user in context\n    await contextUser.setUser(modifiedUser);\n    // Modify list of followed users in database\n    await userEndpoints.update(modifiedUser);\n  };\n\n  const searchWindow = userResults.map((user: User) => {\n    return (\n      <ProfileCard\n        description={user.description}\n        name={user.name}\n        surname={user.surname}\n        pictureUrl={user.profileImage?.url}\n        onClick={(e) => unfollowUser(e, user)}\n        textButton=\"Unfollow\"\n        colorButton=\"red\"\n      />\n    )\n  });\n\n  return (\n    <div>\n      <TextInput type=\"text\" placeholder=\"Search\" onChange={handleChange} />\n      {searchTerm && searchWindow}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}