{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBarTextInput/SearchBarTextInput.component.tsx\";\nimport React, { useState } from 'react';\nimport styles from './SearchBarTextInput.module.scss';\n\nconst SearchBarTextInput = ({\n  type,\n  onChange,\n  placeholder,\n  minLength,\n  children,\n  color = 'smokeWhite',\n  idInput,\n  maxLength\n}) => {\n  const [value, setValue] = useState('');\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  const inputClass = color === 'white' ? styles.inputWhite : styles.inputSmokeWhite;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.textInputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, children && children, /*#__PURE__*/React.createElement(\"input\", {\n    className: inputClass,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    minLength: minLength,\n    id: idInput,\n    maxLength: maxLength,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: styles.label,\n    htmlFor: idInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, placeholder));\n};\n\nexport default SearchBarTextInput;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBarTextInput/SearchBarTextInput.component.tsx"],"names":["React","useState","styles","SearchBarTextInput","type","onChange","placeholder","minLength","children","color","idInput","maxLength","value","setValue","stateChange","event","target","inputClass","inputWhite","inputSmokeWhite","textInputWrapper","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,kCAAnB;;AAaA,MAAMC,kBAAkB,GAAG,CAAC;AAC1BC,EAAAA,IAD0B;AACpBC,EAAAA,QADoB;AACVC,EAAAA,WADU;AACGC,EAAAA,SADH;AACcC,EAAAA,QADd;AACwBC,EAAAA,KAAK,GAAG,YADhC;AAC8CC,EAAAA,OAD9C;AACuDC,EAAAA;AADvD,CAAD,KAEL;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMa,WAAuD,GAAIC,KAAD,IAAW;AACzEV,IAAAA,QAAQ,IAAIA,QAAQ,CAACU,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAIA,QAAMK,UAAU,GAAGR,KAAK,KAAK,OAAV,GAAoBP,MAAM,CAACgB,UAA3B,GAAwChB,MAAM,CAACiB,eAAlE;AACA,sBACE;AAAK,IAAA,SAAS,EAAEjB,MAAM,CAACkB,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGZ,QAAQ,IAAIA,QADf,eAEE;AACE,IAAA,SAAS,EAAES,UADb;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,QAAQ,EAAEH,WAHZ;AAIE,IAAA,KAAK,EAAEF,KAJT;AAKE,IAAA,IAAI,EAAER,IALR;AAME,IAAA,SAAS,EAAEG,SANb;AAOE,IAAA,EAAE,EAAEG,OAPN;AAQE,IAAA,SAAS,EAAEC,SARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAYE;AACE,IAAA,SAAS,EAAET,MAAM,CAACmB,KADpB;AAEE,IAAA,OAAO,EAAEX,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGJ,WAJH,CAZF,CADF;AAqBD,CA9BD;;AAgCA,eAAeH,kBAAf","sourcesContent":["import React, { useState, ReactNode, FunctionComponent } from 'react';\nimport styles from './SearchBarTextInput.module.scss';\n\ntype TextInputProps = {\n  type: 'text' | 'email' | 'password';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  minLength?: number;\n  children?: ReactNode;\n  color?: 'white' | 'smokeWhite';\n  idInput: string,\n  maxLength: number;\n}\n\nconst SearchBarTextInput = ({\n  type, onChange, placeholder, minLength, children, color = 'smokeWhite', idInput, maxLength,\n}: TextInputProps) => {\n  const [value, setValue] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n  const inputClass = color === 'white' ? styles.inputWhite : styles.inputSmokeWhite;\n  return (\n    <div className={styles.textInputWrapper}>\n      {children && children}\n      <input\n        className={inputClass}\n        required\n        onChange={stateChange}\n        value={value}\n        type={type}\n        minLength={minLength}\n        id={idInput}\n        maxLength={maxLength}\n      />\n      <label\n        className={styles.label}\n        htmlFor={idInput}\n      >\n        {placeholder}\n      </label>\n    </div>\n  );\n};\n\nexport default SearchBarTextInput;\n"]},"metadata":{},"sourceType":"module"}