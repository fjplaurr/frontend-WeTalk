{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx\";\nimport React, { useState } from 'react';\nimport styles from './TextInput.module.scss';\n\nconst TextInput = ({\n  id,\n  type,\n  onChange\n}) => {\n  const [value, setValue] = useState('');\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"sdas\",\n    className: styles.textInput,\n    id: id,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx"],"names":["React","useState","styles","TextInput","id","type","onChange","value","setValue","stateChange","event","target","textInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AASA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,IAAN;AAAYC,EAAAA;AAAZ,CAAD,KAA4C;AAC5D,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMQ,WAAuD,GAAIC,KAAD,IAAW;AACzEJ,IAAAA,QAAQ,IAAIA,QAAQ,CAACI,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAIA,sBACE,uDACE;AAAO,IAAA,WAAW,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEL,MAAM,CAACU,SAA5C;AAAuD,IAAA,EAAE,EAAER,EAA3D;AAA+D,IAAA,QAAQ,MAAvE;AAAwE,IAAA,QAAQ,EAAEK,WAAlF;AAA+F,IAAA,KAAK,EAAEF,KAAtG;AAA6G,IAAA,IAAI,EAAEF,IAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAXD;;AAaA,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from './TextInput.module.scss';\n\ntype TextInputProps = {\n  id: string;\n  type: 'text' | 'email';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n}\n\nconst TextInput = ({ id, type, onChange }: TextInputProps) => {\n  const [value, setValue] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n  return (\n    <>\n      <input placeholder=\"sdas\" className={styles.textInput} id={id} required onChange={stateChange} value={value} type={type} />\n    </>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}