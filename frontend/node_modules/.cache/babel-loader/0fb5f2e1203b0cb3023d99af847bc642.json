{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user, _contextUser$user$pro, _contextUser$user2, _contextUser$user2$pr, _contextUser$user3, _contextUser$user3$pr, _contextUser$user4;\n\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const pictureRef = useRef(null); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the prfile configuration window\n\n  const wrapperRef = useRef(null); // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShowConfiguration(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const changePicture = event => {\n    var _pictureRef$current, _pictureRef$current$f;\n\n    console.log(pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current = pictureRef.current) === null || _pictureRef$current === void 0 ? void 0 : (_pictureRef$current$f = _pictureRef$current.files[0]) === null || _pictureRef$current$f === void 0 ? void 0 : _pictureRef$current$f.name);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: () => setShowConfiguration(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageWrapper,\n    style: {\n      backgroundImage: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : (_contextUser$user$pro = _contextUser$user.profileImage) === null || _contextUser$user$pro === void 0 ? void 0 : _contextUser$user$pro.url) && (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : (_contextUser$user2$pr = _contextUser$user2.profileImage) === null || _contextUser$user2$pr === void 0 ? void 0 : _contextUser$user2$pr.url) !== '' ? `url(${contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : (_contextUser$user3$pr = _contextUser$user3.profileImage) === null || _contextUser$user3$pr === void 0 ? void 0 : _contextUser$user3$pr.url})` : `url(${profileImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : _contextUser$user4.description) || 'What is going on?',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: pictureRef,\n    onChange: changePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","styles","UserContext","profileImage","ConfigureProfile","showConfiguration","setShowConfiguration","pictureRef","contextUser","wrapperRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","changePicture","console","log","files","name","configureProfileContainer","iconButton","profileIcon","configurationTargetShow","configurationTargetHide","imageWrapper","backgroundImage","user","url","description"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport TextInput from '../../TextInput';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n\n  const pictureRef = useRef<HTMLInputElement>(null);\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the prfile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        setShowConfiguration(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const changePicture = (event: any) => {\n    console.log(pictureRef?.current?.files[0]?.name);\n  }\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={() => setShowConfiguration(true)}\n        >\n          <FiUser className={styles.profileIcon} />\n        </button>\n        <div\n          ref={wrapperRef}\n          className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide}\n        >\n          <div\n            className={styles.imageWrapper}\n            style={{\n              backgroundImage: contextUser?.user?.profileImage?.url && contextUser?.user?.profileImage?.url !== ''\n                ? `url(${contextUser?.user?.profileImage?.url})` : `url(${profileImage})`,\n            }}\n          />\n          <input\n            type=\"text\"\n            value={contextUser?.user?.description || 'What is going on?'}\n          />\n          <input type=\"file\"\n            ref={pictureRef}\n            onChange={changePicture}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}