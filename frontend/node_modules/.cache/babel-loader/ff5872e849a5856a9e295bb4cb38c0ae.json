{"ast":null,"code":"const get = async url => {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n};\n\nconst post = async (url, data) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst put = async (url, data) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'PUT',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst deleteById = async url => {\n  const request = {\n    method: 'DELETE'\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst postFile = async (url, data) => {\n  const formData = new FormData();\n  const keys = Object.keys(data);\n  keys.forEach(key => formData.append(key, data[key]));\n  formData.append('photo', data);\n  const request = {\n    method: 'POST',\n    body: formData\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nexport { get, post, put, deleteById, postFile };","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/helpers/fetch.ts"],"names":["get","url","response","fetch","json","post","data","body","JSON","stringify","request","method","headers","put","deleteById","postFile","formData","FormData","keys","Object","forEach","key","append"],"mappings":"AAAA,MAAMA,GAAG,GAAG,MAAOC,GAAP,IAAuB;AACjC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAJD;;AAMA,MAAMC,IAAI,GAAG,OAAOJ,GAAP,EAAoBK,IAApB,KAAiC;AAC5C,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb;AACA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdJ,IAAAA,IAFc;AAGdK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHK,GAAhB;AAOA,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAZD;;AAcA,MAAMS,GAAG,GAAG,OAAOZ,GAAP,EAAoBK,IAApB,KAAiC;AAC3C,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb;AACA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdJ,IAAAA,IAFc;AAGdK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHK,GAAhB;AAOA,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAZD;;AAcA,MAAMU,UAAU,GAAG,MAAOb,GAAP,IAAuB;AACxC,QAAMS,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AADM,GAAhB;AAGA,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAPD;;AASA,MAAMW,QAAQ,GAAG,OAAOd,GAAP,EAAoBK,IAApB,KAAkC;AACjD,QAAMU,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACA,QAAMC,IAAW,GAAGC,MAAM,CAACD,IAAP,CAAYZ,IAAZ,CAApB;AACAY,EAAAA,IAAI,CAACE,OAAL,CAAcC,GAAD,IAASL,QAAQ,CAACM,MAAT,CAAgBD,GAAhB,EAAqBf,IAAI,CAACe,GAAD,CAAzB,CAAtB;AACAL,EAAAA,QAAQ,CAACM,MAAT,CAAgB,OAAhB,EAAyBhB,IAAzB;AACA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdJ,IAAAA,IAAI,EAAES;AAFQ,GAAhB;AAIA,QAAMd,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAZD;;AAcA,SACEJ,GADF,EACOK,IADP,EACaQ,GADb,EACkBC,UADlB,EAC8BC,QAD9B","sourcesContent":["const get = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n};\n\nconst post = async (url: string, data: {}) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst put = async (url: string, data: {}) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'PUT',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst deleteById = async (url: string) => {\n  const request = {\n    method: 'DELETE',\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nconst postFile = async (url: string, data: any) => {\n  const formData = new FormData();\n  const keys: any[] = Object.keys(data);\n  keys.forEach((key) => formData.append(key, data[key]));\n  formData.append('photo', data);\n  const request = {\n    method: 'POST',\n    body: formData,\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\nexport {\n  get, post, put, deleteById, postFile,\n};\n"]},"metadata":{},"sourceType":"module"}