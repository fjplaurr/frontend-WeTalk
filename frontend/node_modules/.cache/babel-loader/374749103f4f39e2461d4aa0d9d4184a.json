{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx\";\nimport React, { useState } from 'react';\nimport styles from './TextInput.module.scss';\n\nconst TextInput = ({\n  id,\n  type,\n  onChange,\n  placeholder\n}) => {\n  const [value, setValue] = useState('');\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: placeholder,\n    className: styles.textInput,\n    id: id,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx"],"names":["React","useState","styles","TextInput","id","type","onChange","placeholder","value","setValue","stateChange","event","target","textInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AASA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,EADiB;AACbC,EAAAA,IADa;AACPC,EAAAA,QADO;AACGC,EAAAA;AADH,CAAD,KAEI;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMS,WAAuD,GAAIC,KAAD,IAAW;AACzEL,IAAAA,QAAQ,IAAIA,QAAQ,CAACK,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAIA,sBACE,uDACE;AACE,IAAA,WAAW,EAAED,WADf;AAEE,IAAA,SAAS,EAAEL,MAAM,CAACW,SAFpB;AAGE,IAAA,EAAE,EAAET,EAHN;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,QAAQ,EAAEM,WALZ;AAME,IAAA,KAAK,EAAEF,KANT;AAOE,IAAA,IAAI,EAAEH,IAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAaD,CArBD;;AAuBA,eAAeF,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport styles from './TextInput.module.scss';\n\ntype TextInputProps = {\n  id: string;\n  type: 'text' | 'email' | 'password';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n}\n\nconst TextInput = ({\n  id, type, onChange, placeholder,\n}: TextInputProps) => {\n  const [value, setValue] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n  return (\n    <>\n      <input\n        placeholder={placeholder}\n        className={styles.textInput}\n        id={id}\n        required\n        onChange={stateChange}\n        value={value}\n        type={type}\n      />\n    </>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}