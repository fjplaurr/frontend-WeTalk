{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\nimport Button from '../../Button';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user, _contextUser$user2, _contextUser$user3, _contextUser$user4;\n\n  const [description, setDescription] = useState(''); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the profile configuration window\n\n  const wrapperRef = useRef(null); // Ref for the input to select picture\n\n  const pictureRef = useRef(null); // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // If the event.target is not in the wrapper, it means it is another html element\n      // the one that has the focus\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        contextUser.setIsConfiguringProfile(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleChangePicture = async () => {\n    var _pictureRef$current;\n\n    const file = (pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current = pictureRef.current) === null || _pictureRef$current === void 0 ? void 0 : _pictureRef$current.files)[0];\n    const response = await uploadEndpoints.postPicture(file);\n\n    if (response.location) {\n      const modifUser = { ...contextUser.user,\n        profileImage: response.location\n      }; // Updates profile image url in database\n\n      userEndpoints.update(modifUser); // Updates profile image url in context user\n\n      contextUser.setUser(modifUser);\n    }\n  };\n\n  const onConfigurationSubmit = async event => {\n    event.preventDefault(); // Updates description in database\n\n    const modifiedUser = { ...contextUser.user,\n      description\n    }; // Updates description in database\n\n    userEndpoints.update(modifiedUser); // Updates description in context user\n\n    contextUser.setUser(modifiedUser); // Closes configuration window\n\n    contextUser.setIsConfiguringProfile(false);\n  };\n\n  const imagePicker = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.imageButton,\n    type: \"button\",\n    onClick: () => {\n      var _pictureRef$current2;\n\n      return pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current2 = pictureRef.current) === null || _pictureRef$current2 === void 0 ? void 0 : _pictureRef$current2.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.imageWrapper,\n    src: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : _contextUser$user.profileImage) || profileImage,\n    alt: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.changeImageText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Change Profile Photo\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.hiddenInput,\n    accept: \".png, .jpg, .jpeg\",\n    type: \"file\",\n    ref: pictureRef,\n    onChange: handleChangePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  })); // Sets if the user is writing in the search input or not\n\n  const handleClick = () => {\n    contextUser.setIsConfiguringProfile(true);\n  };\n\n  useEffect(() => {\n    console.log('user is isConfiguringProfile: ');\n    console.log(contextUser.isConfiguringProfile);\n  }, [contextUser.isConfiguringProfile]);\n  const configurationForm = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onConfigurationSubmit,\n    className: styles.formWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n    className: styles.textArea,\n    id: \"descriptionInput\",\n    defaultValue: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    maxLength: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    backgroundFull: true,\n    text: \"Save\",\n    color: \"blue\",\n    type: \"submit\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : _contextUser$user3.profileImage) ? /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.smallImageWrapper,\n    src: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : _contextUser$user4.profileImage) || profileImage,\n    alt: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: contextUser.isConfiguringProfile ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, imagePicker, configurationForm));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","TextareaAutosize","styles","UserContext","profileImage","userEndpoints","uploadEndpoints","Button","ConfigureProfile","description","setDescription","contextUser","wrapperRef","pictureRef","handleClickOutside","event","current","contains","target","setIsConfiguringProfile","document","addEventListener","removeEventListener","handleDescriptionChange","value","handleChangePicture","file","files","response","postPicture","location","modifUser","user","update","setUser","onConfigurationSubmit","preventDefault","modifiedUser","imagePicker","imageButton","click","imageWrapper","changeImageText","hiddenInput","handleClick","console","log","isConfiguringProfile","configurationForm","formWrapper","textArea","buttonWrapper","configureProfileContainer","iconButton","smallImageWrapper","profileIcon","configurationTargetShow","configurationTargetHide"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport { User } from '../../../interfaces/User';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\nimport Button from '../../Button';\n\nconst ConfigureProfile = () => {\n  const [description, setDescription] = useState<string | undefined>('');\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the profile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Ref for the input to select picture\n  const pictureRef = useRef<HTMLInputElement>(null);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // If the event.target is not in the wrapper, it means it is another html element\n      // the one that has the focus\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        contextUser.setIsConfiguringProfile(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleChangePicture = async () => {\n    const file: File = pictureRef?.current?.files![0]!;\n    const response: { location?: string } = await uploadEndpoints.postPicture(file!);\n    if (response.location) {\n      const modifUser: User = { ...contextUser.user!, profileImage: response.location };\n      // Updates profile image url in database\n      userEndpoints.update(modifUser);\n      // Updates profile image url in context user\n      contextUser.setUser(modifUser);\n    }\n  };\n\n  const onConfigurationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // Updates description in database\n    const modifiedUser: User = { ...contextUser.user!, description };\n    // Updates description in database\n    userEndpoints.update(modifiedUser);\n    // Updates description in context user\n    contextUser.setUser(modifiedUser);\n    // Closes configuration window\n    contextUser.setIsConfiguringProfile(false);\n  };\n\n  const imagePicker = (\n    <>\n      <button\n        className={styles.imageButton}\n        type=\"button\"\n        onClick={() => pictureRef?.current?.click()}\n      >\n        <img\n          className={styles.imageWrapper}\n          src={contextUser?.user?.profileImage || profileImage}\n          alt=\"Profile\"\n        />\n        <span className={styles.changeImageText}>Change Profile Photo</span>\n      </button>\n      <input\n        className={styles.hiddenInput}\n        accept=\".png, .jpg, .jpeg\"\n        type=\"file\"\n        ref={pictureRef}\n        onChange={handleChangePicture}\n      />\n    </>\n  );\n\n  // Sets if the user is writing in the search input or not\n  const handleClick = () => {\n    contextUser.setIsConfiguringProfile(true);\n  };\n\n  useEffect(() => {\n    console.log('user is isConfiguringProfile: ')\n    console.log(contextUser.isConfiguringProfile)\n\n  }, [contextUser.isConfiguringProfile]);\n\n  const configurationForm = (\n    <>\n      <form\n        onSubmit={onConfigurationSubmit}\n        className={styles.formWrapper}\n      >\n        <TextareaAutosize\n          className={styles.textArea}\n          id=\"descriptionInput\"\n          defaultValue={contextUser?.user?.description || 'What is going on?'}\n          onChange={handleDescriptionChange}\n          maxLength={100}\n        />\n        <div className={styles.buttonWrapper}>\n          <Button\n            backgroundFull\n            text=\"Save\"\n            color=\"blue\"\n            type=\"submit\"\n            small\n          />\n        </div>\n      </form>\n    </>\n  );\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <button\n        className={styles.iconButton}\n        onClick={handleClick}\n      >\n        {\n          contextUser?.user?.profileImage ? (\n            <img\n              className={styles.smallImageWrapper}\n              src={contextUser?.user?.profileImage || profileImage}\n              alt=\"Profile\"\n            />\n          )\n            : <FiUser className={styles.profileIcon} />\n        }\n      </button>\n      <div\n        ref={wrapperRef}\n        className={\n          contextUser.isConfiguringProfile\n            ? styles.configurationTargetShow : styles.configurationTargetHide\n        }\n      >\n        {imagePicker}\n        {configurationForm}\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}