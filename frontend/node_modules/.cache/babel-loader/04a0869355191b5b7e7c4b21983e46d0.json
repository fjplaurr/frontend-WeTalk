{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/containers/Home/ReadingSection/ReadingSection.component.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport style from './ReadingSection.module.scss';\nimport PostCard from '../../../components/PostCard';\nimport { UserContext } from '../../App';\nimport * as userEndpoints from '../../../endpoints/user';\n\nconst ReadingSection = () => {\n  const [posts, setPosts] = useState([]);\n  const contextUser = useContext(UserContext); // Loads posts from followed users every time the user\n  // changes (for instance, when following/unfollowing users)\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const data = await userEndpoints.getPostsFromFollowedUsers(contextUser.user._id);\n      setPosts(data);\n    };\n\n    getPosts();\n  }, [contextUser.user]);\n  const postsList = posts.map(post => {\n    return /*#__PURE__*/React.createElement(PostCard, {\n      name: post.author.name,\n      surname: post.author.surname,\n      message: post.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: style.readingSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, postsList);\n};\n\nexport default ReadingSection;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/containers/Home/ReadingSection/ReadingSection.component.tsx"],"names":["React","useState","useEffect","useContext","style","PostCard","UserContext","userEndpoints","ReadingSection","posts","setPosts","contextUser","getPosts","data","getPostsFromFollowedUsers","user","_id","postsList","map","post","author","name","surname","text","readingSection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAMU,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B,CAF2B,CAI3B;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,QAAQ,GAAG,YAAY;AAC3B,YAAMC,IAAY,GAAG,MAAMN,aAAa,CAACO,yBAAd,CAAwCH,WAAW,CAACI,IAAZ,CAAkBC,GAA1D,CAA3B;AACAN,MAAAA,QAAQ,CAACG,IAAD,CAAR;AACD,KAHD;;AAIAD,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACD,WAAW,CAACI,IAAb,CANM,CAAT;AAQA,QAAME,SAAS,GAAGR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAgB;AAC1C,wBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEA,IAAI,CAACC,MAAL,CAAYC,IADpB;AAEE,MAAA,OAAO,EAAEF,IAAI,CAACC,MAAL,CAAYE,OAFvB;AAGE,MAAA,OAAO,EAAEH,IAAI,CAACI,IAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARiB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEnB,KAAK,CAACoB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,SADH,CADF;AAMD,CA9BD;;AAgCA,eAAeT,cAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport style from './ReadingSection.module.scss';\nimport PostCard from '../../../components/PostCard';\nimport { Post } from '../../../interfaces/Post';\nimport { UserContext } from '../../App';\nimport * as userEndpoints from '../../../endpoints/user';\n\nconst ReadingSection = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const contextUser = useContext(UserContext);\n\n  // Loads posts from followed users every time the user\n  // changes (for instance, when following/unfollowing users)\n  useEffect(() => {\n    const getPosts = async () => {\n      const data: Post[] = await userEndpoints.getPostsFromFollowedUsers(contextUser.user!._id!);\n      setPosts(data);\n    };\n    getPosts();\n  }, [contextUser.user]);\n\n  const postsList = posts.map((post: Post) => {\n    return (\n      <PostCard\n        name={post.author.name}\n        surname={post.author.surname}\n        message={post.text}\n      />\n    )\n  });\n\n  return (\n    <section className={style.readingSection}>\n      {postsList}\n\n    </section>\n  );\n};\n\nexport default ReadingSection;\n"]},"metadata":{},"sourceType":"module"}