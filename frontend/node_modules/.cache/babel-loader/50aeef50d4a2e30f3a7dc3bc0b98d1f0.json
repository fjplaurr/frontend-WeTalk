{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user3, _contextUser$user4, _contextUser$user4$pr, _contextUser$user5, _contextUser$user5$pr, _contextUser$user6, _contextUser$user6$pr;\n\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [imageURL, setImageURL] = useState('');\n  const [description, setDescription] = useState(''); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the profile configuration window\n\n  const wrapperRef = useRef(null); // Ref for the input to select picture\n\n  const pictureRef = useRef(null); // Changes URL and description every time the context user is updated\n\n  useEffect(() => {\n    var _contextUser$user, _contextUser$user$pro, _contextUser$user2;\n\n    setImageURL((_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : (_contextUser$user$pro = _contextUser$user.profileImage) === null || _contextUser$user$pro === void 0 ? void 0 : _contextUser$user$pro.url);\n    setDescription((_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.description);\n  }, [contextUser.user]); // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShowConfiguration(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleChangePicture = event => {\n    var _current, _current$files$;\n\n    console.log((_current = pictureRef.current) === null || _current === void 0 ? void 0 : (_current$files$ = _current.files[0]) === null || _current$files$ === void 0 ? void 0 : _current$files$.name);\n  };\n\n  const configurationForm = /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : _contextUser$user3.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: pictureRef,\n    onChange: handleChangePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: () => setShowConfiguration(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageWrapper,\n    style: {\n      backgroundImage: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : (_contextUser$user4$pr = _contextUser$user4.profileImage) === null || _contextUser$user4$pr === void 0 ? void 0 : _contextUser$user4$pr.url) && (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user5 = contextUser.user) === null || _contextUser$user5 === void 0 ? void 0 : (_contextUser$user5$pr = _contextUser$user5.profileImage) === null || _contextUser$user5$pr === void 0 ? void 0 : _contextUser$user5$pr.url) !== '' ? `url(${contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user6 = contextUser.user) === null || _contextUser$user6 === void 0 ? void 0 : (_contextUser$user6$pr = _contextUser$user6.profileImage) === null || _contextUser$user6$pr === void 0 ? void 0 : _contextUser$user6$pr.url})` : `url(${profileImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), configurationForm)));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","styles","UserContext","profileImage","ConfigureProfile","showConfiguration","setShowConfiguration","imageURL","setImageURL","description","setDescription","contextUser","wrapperRef","pictureRef","user","url","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDescriptionChange","value","handleChangePicture","console","log","files","name","configurationForm","configureProfileContainer","iconButton","profileIcon","configurationTargetShow","configurationTargetHide","imageWrapper","backgroundImage"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport TextInput from '../../TextInput';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [imageURL, setImageURL] = useState<string | undefined>('');\n  const [description, setDescription] = useState<string | undefined>('');\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the profile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Ref for the input to select picture\n  const pictureRef = useRef<HTMLDivElement>(null);\n\n  // Changes URL and description every time the context user is updated\n  useEffect(() => {\n    setImageURL(contextUser.user?.profileImage?.url);\n    setDescription(contextUser.user?.description!);\n  }, [contextUser.user]);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        setShowConfiguration(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n  }\n\n  const handleChangePicture = (event: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(pictureRef!.current?.files[0]?.name);\n  };\n\n  const configurationForm = (\n    <form>\n      <input\n        type=\"text\"\n        value={contextUser?.user?.description || 'What is going on?'}\n        onChange={handleDescriptionChange}\n      />\n      <input\n        type=\"file\"\n        ref={pictureRef}\n        onChange={handleChangePicture}\n      />\n    </form>\n  );\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={() => setShowConfiguration(true)}\n        >\n          <FiUser className={styles.profileIcon} />\n        </button>\n        <div\n          ref={wrapperRef}\n          className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide}\n        >\n          <div\n            className={styles.imageWrapper}\n            style={{\n              backgroundImage: contextUser?.user?.profileImage?.url && contextUser?.user?.profileImage?.url !== ''\n                ? `url(${contextUser?.user?.profileImage?.url})` : `url(${profileImage})`,\n            }}\n          />\n          {configurationForm}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}