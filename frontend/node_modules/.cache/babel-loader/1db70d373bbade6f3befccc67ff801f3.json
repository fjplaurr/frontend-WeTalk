{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/containers/Login/Signin/Signin.component.tsx\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TextInput from '../../../components/TextInput';\nimport UserContext from '../../../helpers/context';\nimport styles from './Signin.module.scss';\nimport * as authEndpoints from '../../../endpoints/auth';\nimport Button from '../../../components/Button';\n\nconst Signin = () => {\n  // React-context to access current connected user\n  const contextUser = useContext(UserContext); // React-router history\n\n  const history = useHistory(); // Signin state\n\n  const [signinEmail, setSigninEmail] = useState('');\n  const [signinPassword, setSigninPassword] = useState('');\n  const [incorrectUserPasswordError, setIncorrectUserPasswordError] = useState(''); // Signin email change handler\n\n  const onSigninEmailChangeHandler = e => {\n    setSigninEmail(e.currentTarget.value);\n  }; // Signin password change handler\n\n\n  const onSigninPasswordChangeHandler = e => {\n    setSigninPassword(e.currentTarget.value);\n  }; // Function triggered when submiting sign in\n\n\n  const onSigninSubmit = async event => {\n    event.preventDefault();\n    const login = {\n      email: signinEmail,\n      password: signinPassword\n    };\n\n    try {\n      const res = await authEndpoints.signin(login); // checks if res has an user property\n\n      if (res.user) {\n        // Sets current user in context\n        await contextUser.setUser(res.user); // Pushes to home screen\n\n        history.push('./home');\n      } else {\n        setIncorrectUserPasswordError('The email and/or password are not correct');\n      }\n    } catch (err) {\n      history.push('./notfound');\n    }\n  }; // Autologin after user is set if the local storage contains it\n\n\n  useEffect(() => {\n    const autologin = () => {\n      if (contextUser.user) {\n        history.push('./home');\n      }\n    };\n\n    autologin();\n  }, [contextUser.user, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.signinContainer,\n    \"data-testid\": \"signinContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.titleWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSigninSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    idInput: \"signinEmail\",\n    onChange: onSigninEmailChangeHandler,\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.inputWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    idInput: \"signinPassword\",\n    onChange: onSigninPasswordChangeHandler,\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), incorrectUserPasswordError && /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 40\n    }\n  }, incorrectUserPasswordError), /*#__PURE__*/React.createElement(Button, {\n    backgroundFull: true,\n    text: \"Sign in\",\n    color: \"blue\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/containers/Login/Signin/Signin.component.tsx"],"names":["React","useContext","useState","useEffect","useHistory","TextInput","UserContext","styles","authEndpoints","Button","Signin","contextUser","history","signinEmail","setSigninEmail","signinPassword","setSigninPassword","incorrectUserPasswordError","setIncorrectUserPasswordError","onSigninEmailChangeHandler","e","currentTarget","value","onSigninPasswordChangeHandler","onSigninSubmit","event","preventDefault","login","email","password","res","signin","user","setUser","push","err","autologin","signinContainer","titleWrapper","title","inputWrapper","error"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport TextInput from '../../../components/TextInput';\nimport { User } from '../../../interfaces';\nimport UserContext from '../../../helpers/context';\nimport styles from './Signin.module.scss';\nimport * as authEndpoints from '../../../endpoints/auth';\nimport Button from '../../../components/Button';\n\nconst Signin = () => {\n  // React-context to access current connected user\n  const contextUser = useContext(UserContext);\n\n  // React-router history\n  const history = useHistory();\n\n  // Signin state\n  const [signinEmail, setSigninEmail] = useState('');\n  const [signinPassword, setSigninPassword] = useState('');\n  const [incorrectUserPasswordError, setIncorrectUserPasswordError] = useState('');\n\n  // Signin email change handler\n  const onSigninEmailChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSigninEmail(e.currentTarget.value);\n  };\n\n  // Signin password change handler\n  const onSigninPasswordChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSigninPassword(e.currentTarget.value);\n  };\n\n  // Function triggered when submiting sign in\n  const onSigninSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const login = {\n      email: signinEmail,\n      password: signinPassword,\n    };\n\n    try {\n      const res: { user: User, token: string } = await authEndpoints.signin(login);\n      // checks if res has an user property\n      if (res.user) {\n        // Sets current user in context\n        await contextUser.setUser(res.user);\n        // Pushes to home screen\n        history.push('./home');\n      } else {\n        setIncorrectUserPasswordError('The email and/or password are not correct');\n      }\n    } catch (err) {\n      history.push('./notfound');\n    }\n  };\n\n  // Autologin after user is set if the local storage contains it\n  useEffect(() => {\n    const autologin = () => {\n      if (contextUser.user) {\n        history.push('./home');\n      }\n    };\n    autologin();\n  }, [contextUser.user, history]);\n\n  return (\n    <div className={styles.signinContainer} data-testid=\"signinContainer\">\n      <div className={styles.titleWrapper}>\n        <h1 className={styles.title}>Already have an account?</h1>\n      </div>\n      <form onSubmit={onSigninSubmit}>\n        <div className={styles.inputWrapper}>\n          <TextInput\n            idInput=\"signinEmail\"\n            onChange={onSigninEmailChangeHandler}\n            type=\"email\"\n            placeholder=\"Email\"\n          />\n        </div>\n        <div className={styles.inputWrapper}>\n          <TextInput\n            idInput=\"signinPassword\"\n            onChange={onSigninPasswordChangeHandler}\n            type=\"password\"\n            placeholder=\"Password\"\n          />\n        </div>\n        {incorrectUserPasswordError && <p className={styles.error}>{incorrectUserPasswordError}</p>}\n        <Button\n          backgroundFull\n          text=\"Sign in\"\n          color=\"blue\"\n          type=\"submit\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Signin;\n"]},"metadata":{},"sourceType":"module"}