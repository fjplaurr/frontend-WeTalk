{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx\";\nimport React, { useState } from 'react';\nimport styles from './TextInput.module.scss';\n\nconst TextInput = ({\n  type,\n  onChange,\n  placeholder,\n  minLength,\n  children,\n  color = 'smokeWhite'\n}) => {\n  const [value, setValue] = useState('');\n\n  const stateChange = event => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n\n  const inputClass = color === 'white' ? styles.textInputWrapperWhite : styles.textInputWrapperSmokeWhite;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children && children, /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.input,\n    placeholder: placeholder,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: type,\n    minLength: minLength,\n    color: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/TextInput/TextInput.component.tsx"],"names":["React","useState","styles","TextInput","type","onChange","placeholder","minLength","children","color","value","setValue","stateChange","event","target","inputClass","textInputWrapperWhite","textInputWrapperSmokeWhite","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAWA,MAAMC,SAAS,GAAG,CAAC;AACjBC,EAAAA,IADiB;AACXC,EAAAA,QADW;AACDC,EAAAA,WADC;AACYC,EAAAA,SADZ;AACuBC,EAAAA,QADvB;AACiCC,EAAAA,KAAK,GAAG;AADzC,CAAD,KAEI;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AACA,QAAMW,WAAuD,GAAIC,KAAD,IAAW;AACzER,IAAAA,QAAQ,IAAIA,QAAQ,CAACQ,KAAD,CAApB;AACAF,IAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,GAHD;;AAIA,QAAMK,UAAU,GAAGN,KAAK,KAAK,OAAV,GAAoBP,MAAM,CAACc,qBAA3B,GAAmDd,MAAM,CAACe,0BAA7E;AACA,sBACE;AAAK,IAAA,SAAS,EAAEF,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QAAQ,IAAIA,QADf,eAEE;AACE,IAAA,SAAS,EAAEN,MAAM,CAACgB,KADpB;AAEE,IAAA,WAAW,EAAEZ,WAFf;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEM,WAJZ;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,IAAI,EAAEN,IANR;AAOE,IAAA,SAAS,EAAEG,SAPb;AAQE,IAAA,KAAK,EAAEE,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAeD,CAxBD;;AA0BA,eAAeN,SAAf","sourcesContent":["import React, { useState, ReactNode } from 'react';\nimport styles from './TextInput.module.scss';\n\ntype TextInputProps = {\n  type: 'text' | 'email' | 'password';\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  minLength?: number;\n  children?: ReactNode;\n  color?: 'white' | 'smokeWhite';\n}\n\nconst TextInput = ({\n  type, onChange, placeholder, minLength, children, color = 'smokeWhite',\n}: TextInputProps) => {\n  const [value, setValue] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    onChange && onChange(event);\n    setValue(event.target.value);\n  };\n  const inputClass = color === 'white' ? styles.textInputWrapperWhite : styles.textInputWrapperSmokeWhite;\n  return (\n    <div className={inputClass}>\n      {children && children}\n      <input\n        className={styles.input}\n        placeholder={placeholder}\n        required\n        onChange={stateChange}\n        value={value}\n        type={type}\n        minLength={minLength}\n        color={color}\n      />\n    </div>\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}