{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/containers/Routes/Routes.component.tsx\";\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport NavBar from '../../components/NavBar';\nimport Login from '../Login';\nimport Home from '../Home';\nimport NotFound from '../NotFound';\nimport UserContext from '../../helpers/context';\n\nconst PrivateRoute = ({\n  isLoggedIn,\n  path\n}) => {\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Route, {\n      path: path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 10\n    }\n  });\n};\n\nconst Routes = () => {\n  const contextUser = useContext(UserContext);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    isLoggedIn: !!contextUser.user,\n    path: \"/home\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/notfound\",\n    component: NotFound,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Routes;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/containers/Routes/Routes.component.tsx"],"names":["React","useContext","BrowserRouter","Router","Switch","Route","Redirect","NavBar","Login","Home","NotFound","UserContext","PrivateRoute","isLoggedIn","path","Routes","contextUser","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAMO,kBANP;AAOA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAOA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA6C;AAChE,MAAID,UAAJ,EAAgB;AACd,wBAAO,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,sBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CALD;;AAOA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,WAAW,GAAGf,UAAU,CAACU,WAAD,CAA9B;AACA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEH,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,YAAD;AAAc,IAAA,UAAU,EAAE,CAAC,CAACQ,WAAW,CAACC,IAAxC;AAA8C,IAAA,IAAI,EAAC,OAAnD;AAA2D,IAAA,SAAS,EAAER,IAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFF,CADF;AAUD,CAZD;;AAcA,eAAeK,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  RouteProps,\n} from 'react-router-dom';\nimport NavBar from '../../components/NavBar';\nimport Login from '../Login';\nimport Home from '../Home';\nimport NotFound from '../NotFound';\nimport UserContext from '../../helpers/context';\n\ninterface PrivateRouteProps {\n  isLoggedIn: boolean,\n  path: any,\n}\n\nconst PrivateRoute = ({ isLoggedIn, path }: PrivateRouteProps) => {\n  if (isLoggedIn) {\n    return <Route path={path} />;\n  }\n  return <Redirect to=\"/\" />;\n};\n\nconst Routes = () => {\n  const contextUser = useContext(UserContext);\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <PrivateRoute isLoggedIn={!!contextUser.user} path=\"/home\" component={Home} />\n        <Route path=\"/notfound\" component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}