{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/containers/Home/PostSection/PostSection.component.tsx\";\nimport React, { useState, useContext } from 'react';\nimport styles from './PostSection.module.scss';\nimport Button from '../../../components/Button';\nimport { UserContext } from '../../App';\n\nconst PostSection = () => {\n  const [post, setPost] = useState('');\n\n  const stateChange = event => {\n    setPost(event.target.value);\n  }; // Reads current connected user from Context\n\n\n  const contextUser = useContext(UserContext); // Function triggered when submiting sign up\n\n  const handlePost = async event => {\n    event.preventDefault();\n    const newPost = {\n      author: contextUser.user._id,\n      date: new Date(),\n      text: post\n    };\n\n    try {\n      const res = await authEndpoints.signup(newUser);\n\n      if (res) {\n        // Sets current user in context\n        await contextUser.setUser(res.user); // Pushes to home screen\n\n        history.push('./home');\n      }\n    } catch (err) {\n      history.push('./notfound');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"What do you want to write?\",\n    className: styles.textInput,\n    required: true,\n    onChange: stateChange,\n    value: value,\n    type: \"text\",\n    maxLength: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    backgroundFull: true,\n    text: \"Post\",\n    color: \"blue\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default PostSection;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/containers/Home/PostSection/PostSection.component.tsx"],"names":["React","useState","useContext","styles","Button","UserContext","PostSection","post","setPost","stateChange","event","target","value","contextUser","handlePost","preventDefault","newPost","author","user","_id","date","Date","text","res","authEndpoints","signup","newUser","setUser","history","push","err","textInput"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,SAASC,WAAT,QAA4B,WAA5B;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AACA,QAAMQ,WAAuD,GAAIC,KAAD,IAAW;AACzEF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,GAFD,CAFwB,CAKxB;;;AACA,QAAMC,WAAW,GAAGX,UAAU,CAACG,WAAD,CAA9B,CANwB,CAQxB;;AACA,QAAMS,UAAU,GAAG,MAAOJ,KAAP,IAAmD;AACpEA,IAAAA,KAAK,CAACK,cAAN;AACA,UAAMC,OAAa,GAAG;AACpBC,MAAAA,MAAM,EAAEJ,WAAW,CAACK,IAAZ,CAAkBC,GADN;AAEpBC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EAFc;AAGpBC,MAAAA,IAAI,EAAEf;AAHc,KAAtB;;AAKA,QAAI;AACF,YAAMgB,GAAkC,GAAG,MAAMC,aAAa,CAACC,MAAd,CAAqBC,OAArB,CAAjD;;AACA,UAAIH,GAAJ,EAAS;AACP;AACA,cAAMV,WAAW,CAACc,OAAZ,CAAoBJ,GAAG,CAACL,IAAxB,CAAN,CAFO,CAGP;;AACAU,QAAAA,OAAO,CAACC,IAAR,CAAa,QAAb;AACD;AACF,KARD,CAQE,OAAOC,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD;AACF,GAlBD;;AAqBA,sBACE,uDACE;AAAM,IAAA,QAAQ,EAAEf,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,4BADd;AAEE,IAAA,SAAS,EAAEX,MAAM,CAAC4B,SAFpB;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,QAAQ,EAAEtB,WAJZ;AAKE,IAAA,KAAK,EAAEG,KALT;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,SAAS,EAAE,GAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE,oBAAC,MAAD;AACE,IAAA,cAAc,MADhB;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAqBD,CAnDD;;AAqDA,eAAeN,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport styles from './PostSection.module.scss';\nimport Button from '../../../components/Button';\nimport { Post } from '../../../interfaces';\nimport { UserContext } from '../../App';\n\nconst PostSection = () => {\n  const [post, setPost] = useState('');\n  const stateChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n    setPost(event.target.value);\n  };\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Function triggered when submiting sign up\n  const handlePost = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const newPost: Post = {\n      author: contextUser.user!._id!,\n      date: new Date(),\n      text: post,\n    };\n    try {\n      const res: { user: User, token: string } = await authEndpoints.signup(newUser);\n      if (res) {\n        // Sets current user in context\n        await contextUser.setUser(res.user);\n        // Pushes to home screen\n        history.push('./home');\n      }\n    } catch (err) {\n      history.push('./notfound');\n    }\n  };\n\n\n  return (\n    <>\n      <form onSubmit={handlePost}>\n        <input\n          placeholder='What do you want to write?'\n          className={styles.textInput}\n          required\n          onChange={stateChange}\n          value={value}\n          type='text'\n          maxLength={200}\n        />\n        <Button\n          backgroundFull\n          text=\"Post\"\n          color=\"blue\"\n          type=\"submit\"\n        />\n      </form>\n    </>\n  );\n};\n\nexport default PostSection;\n"]},"metadata":{},"sourceType":"module"}