{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/index.tsx\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport NavBar from './components/NavBar';\nimport Login from './containers/Login';\nimport Home from './containers/Home';\nimport NotFound from './containers/NotFound';\n// const UserContext = createContext<context>({\n//   user: undefined,\n//   setUser: () => { },\n// });\nconst ThemeContext = React.createContext('light');\n\nconst App = () => {\n  const [user, setUser] = useState();\n  return (\n    /*#__PURE__*/\n    // <UserContext.Provider value={{ user, setUser }}>\n    React.createElement(ThemeContext.Provider, {\n      value: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(React.StrictMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    })))))) // </UserContext.Provider>\n\n  );\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }\n}), document.getElementById('root')); // export default UserContext;\n\nexport default pruebaContext; // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/index.tsx"],"names":["React","useState","ReactDOM","BrowserRouter","Router","Switch","Route","serviceWorker","NavBar","Login","Home","NotFound","ThemeContext","createContext","App","user","setUser","render","document","getElementById","pruebaContext","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+C,OAA/C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,QAIO,kBAJP;AAKA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAQA;AACA;AACA;AACA;AAEA,MAAMC,YAAY,GAAGZ,KAAK,CAACa,aAAN,CAAoB,OAApB,CAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,EAAhC;AACA;AAAA;AACE;AACA,wBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,GAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,eAUE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAFF,CADF,CADF,CAFF,CAuBE;;AAvBF;AAyBD,CA3BD;;AA6BAC,QAAQ,CAACe,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;;AACA,eAAeC,aAAf,C,CAEA;AACA;AACA;;AACAb,aAAa,CAACc,UAAd","sourcesContent":["import React, { useState, createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport NavBar from './components/NavBar';\nimport Login from './containers/Login';\nimport Home from './containers/Home';\nimport NotFound from './containers/NotFound';\nimport { User } from './interfaces/User';\n\ntype context = {\n  user: User | undefined,\n  setUser: React.Dispatch<React.SetStateAction<User | undefined>>,\n};\n\n// const UserContext = createContext<context>({\n//   user: undefined,\n//   setUser: () => { },\n// });\n\nconst ThemeContext = React.createContext('light');\n\nconst App = () => {\n  const [user, setUser] = useState<User>();\n  return (\n    // <UserContext.Provider value={{ user, setUser }}>\n    <ThemeContext.Provider value='dark'>\n      <React.StrictMode>\n        <Router>\n          <NavBar />\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n            >\n              <Login />\n            </Route>\n            <Route path=\"/home\">\n              <Home />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </React.StrictMode>\n    </ThemeContext.Provider>\n    // </UserContext.Provider>\n  );\n};\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n\n// export default UserContext;\nexport default pruebaContext;\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}