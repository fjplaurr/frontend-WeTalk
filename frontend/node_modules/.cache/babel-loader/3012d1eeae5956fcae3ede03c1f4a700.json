{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/Button/Button.component.tsx\";\nimport * as React from 'react';\nimport styles from './Button.module.scss';\n\nconst Button = ({\n  backgroundFull = false,\n  text,\n  color = 'blue'\n}) => {\n  let style = '';\n\n  if (backgroundFull && color === 'blue') {\n    style = styles.fullBlueButton;\n  }\n\n  if (backgroundFull && color === 'red') {\n    style = styles.fullRedButton;\n  }\n\n  if (!backgroundFull && color === 'blue') {\n    style = styles.emptyBlueButton;\n  }\n\n  if (!backgroundFull && color === 'blue') {\n    style = styles.emptyBlueButton;\n  }\n\n  return /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/Button/Button.component.tsx"],"names":["React","styles","Button","backgroundFull","text","color","style","fullBlueButton","fullRedButton","emptyBlueButton"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAQA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,cAAc,GAAG,KAAnB;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA,KAAK,GAAG;AAAxC,CAAD,KAAmE;AAChF,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAIH,cAAc,IAAIE,KAAK,KAAK,MAAhC,EAAwC;AACtCC,IAAAA,KAAK,GAAGL,MAAM,CAACM,cAAf;AACD;;AACD,MAAIJ,cAAc,IAAIE,KAAK,KAAK,KAAhC,EAAuC;AACrCC,IAAAA,KAAK,GAAGL,MAAM,CAACO,aAAf;AACD;;AACD,MAAI,CAACL,cAAD,IAAmBE,KAAK,KAAK,MAAjC,EAAyC;AACvCC,IAAAA,KAAK,GAAGL,MAAM,CAACQ,eAAf;AACD;;AACD,MAAI,CAACN,cAAD,IAAmBE,KAAK,KAAK,MAAjC,EAAyC;AACvCC,IAAAA,KAAK,GAAGL,MAAM,CAACQ,eAAf;AACD;;AACD,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAEH,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,IAJH,CADF;AAQD,CAtBD;;AAwBA,eAAeF,MAAf","sourcesContent":["import * as React from 'react';\nimport styles from './Button.module.scss';\n\ntype ButtonProps = {\n  backgroundFull?: boolean;\n  text: string;\n  color: 'blue' | 'red';\n}\n\nconst Button = ({ backgroundFull = false, text, color = 'blue' }: ButtonProps) => {\n  let style = '';\n  if (backgroundFull && color === 'blue') {\n    style = styles.fullBlueButton;\n  }\n  if (backgroundFull && color === 'red') {\n    style = styles.fullRedButton;\n  }\n  if (!backgroundFull && color === 'blue') {\n    style = styles.emptyBlueButton;\n  }\n  if (!backgroundFull && color === 'blue') {\n    style = styles.emptyBlueButton;\n  }\n  return (\n    <button\n      type=\"button\"\n      className={style}\n    >\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}