{"ast":null,"code":"import { get, post, put, deleteById } from '../helpers/fetch';\n// const baseUrl = 'https://backend-post-application.herokuapp.com/api/posts/';\nconst baseUrl = 'http://localhost:5000/api/posts/'; // Get\n\nconst getAll = () => get(`${baseUrl}`);\n\nconst getSingle = id => get(`${baseUrl}${id}`);\n\nconst getAllFromFollowedUsers = userId => get(`${baseUrl}/user${userId}`); // Post\n\n\nconst create = message => post(`${baseUrl}`, message); // Put\n\n\nconst update = message => put(`${baseUrl}${message._id}`, message); // Delete\n\n\nconst deleteSingle = id => deleteById(`${baseUrl}${id}`);\n\nexport { getAll, getSingle, create, update, deleteSingle, getAllFromFollowedUsers };","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/endpoints/post.ts"],"names":["get","post","put","deleteById","baseUrl","getAll","getSingle","id","getAllFromFollowedUsers","userId","create","message","update","_id","deleteSingle"],"mappings":"AAAA,SACEA,GADF,EACOC,IADP,EACaC,GADb,EACkBC,UADlB,QAEO,kBAFP;AAKA;AACA,MAAMC,OAAO,GAAG,kCAAhB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,MAAML,GAAG,CAAE,GAAEI,OAAQ,EAAZ,CAAxB;;AACA,MAAME,SAAS,GAAIC,EAAD,IAAgBP,GAAG,CAAE,GAAEI,OAAQ,GAAEG,EAAG,EAAjB,CAArC;;AACA,MAAMC,uBAAuB,GAAIC,MAAD,IAAoBT,GAAG,CAAE,GAAEI,OAAQ,QAAOK,MAAO,EAA1B,CAAvD,C,CAEA;;;AACA,MAAMC,MAAM,GAAIC,OAAD,IAAmBV,IAAI,CAAE,GAAEG,OAAQ,EAAZ,EAAeO,OAAf,CAAtC,C,CAEA;;;AACA,MAAMC,MAAM,GAAID,OAAD,IAAmBT,GAAG,CAAE,GAAEE,OAAQ,GAAEO,OAAO,CAACE,GAAI,EAA1B,EAA6BF,OAA7B,CAArC,C,CAEA;;;AACA,MAAMG,YAAY,GAAIP,EAAD,IAAgBJ,UAAU,CAAE,GAAEC,OAAQ,GAAEG,EAAG,EAAjB,CAA/C;;AAEA,SACEF,MADF,EACUC,SADV,EACqBI,MADrB,EAC6BE,MAD7B,EACqCE,YADrC,EACmDN,uBADnD","sourcesContent":["import {\n  get, post, put, deleteById,\n} from '../helpers/fetch';\nimport { Post } from '../interfaces';\n\n// const baseUrl = 'https://backend-post-application.herokuapp.com/api/posts/';\nconst baseUrl = 'http://localhost:5000/api/posts/';\n\n// Get\nconst getAll = () => get(`${baseUrl}`);\nconst getSingle = (id: string) => get(`${baseUrl}${id}`);\nconst getAllFromFollowedUsers = (userId: string) => get(`${baseUrl}/user${userId}`)\n\n// Post\nconst create = (message: Post) => post(`${baseUrl}`, message);\n\n// Put\nconst update = (message: Post) => put(`${baseUrl}${message._id}`, message);\n\n// Delete\nconst deleteSingle = (id: string) => deleteById(`${baseUrl}${id}`);\n\nexport {\n  getAll, getSingle, create, update, deleteSingle, getAllFromFollowedUsers,\n};\n"]},"metadata":{},"sourceType":"module"}