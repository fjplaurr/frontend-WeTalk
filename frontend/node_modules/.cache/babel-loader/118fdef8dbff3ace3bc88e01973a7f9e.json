{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\nimport TextInputsettings from '../../TextInputSettings';\nimport Button from '../../Button';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user, _contextUser$user2, _contextUser$user3, _contextUser$user4;\n\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [description, setDescription] = useState(''); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the profile configuration window\n\n  const wrapperRef = useRef(null); // Ref for the input to select picture\n\n  const pictureRef = useRef(null); // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShowConfiguration(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleChangePicture = async () => {\n    var _pictureRef$current;\n\n    const file = (pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current = pictureRef.current) === null || _pictureRef$current === void 0 ? void 0 : _pictureRef$current.files)[0];\n    const response = await uploadEndpoints.postPicture(file);\n\n    if (response.location) {\n      const modifUser = { ...contextUser.user,\n        profileImage: response.location\n      }; // Updates profile image url in database\n\n      userEndpoints.update(modifUser); // Updates profile image url in context user\n\n      contextUser.setUser(modifUser);\n    }\n  };\n\n  const onConfigurationSubmit = async event => {\n    event.preventDefault(); // Updates description in database\n\n    const modifiedUser = { ...contextUser.user,\n      description\n    }; // Updates description in database\n\n    userEndpoints.update(modifiedUser); // Updates description in context user\n\n    contextUser.setUser(modifiedUser);\n  };\n\n  const imagePicker = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.imageButton,\n    type: \"button\",\n    onClick: () => {\n      var _pictureRef$current2;\n\n      return pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current2 = pictureRef.current) === null || _pictureRef$current2 === void 0 ? void 0 : _pictureRef$current2.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.imageWrapper,\n    src: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : _contextUser$user.profileImage) || profileImage,\n    alt: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.changeImageText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Change Profile Photo\")), /*#__PURE__*/React.createElement(\"input\", {\n    className: styles.hiddenInput,\n    accept: \".png, .jpg, .jpeg\",\n    type: \"file\",\n    ref: pictureRef,\n    onChange: handleChangePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }));\n  const configurationForm = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onConfigurationSubmit,\n    className: styles.formWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextInputsettings, {\n    placeholder: \"Description\",\n    textLabel: \"Description\",\n    idInput: \"descriptionInput\",\n    type: \"text\",\n    initialValue: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    backgroundFull: true,\n    text: \"Save\",\n    color: \"blue\",\n    type: \"submit\",\n    small: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: () => setShowConfiguration(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : _contextUser$user3.profileImage) ? /*#__PURE__*/React.createElement(\"img\", {\n    className: styles.imageWrapper,\n    src: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : _contextUser$user4.profileImage) || profileImage,\n    alt: \"Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, imagePicker, configurationForm)));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","styles","UserContext","profileImage","userEndpoints","uploadEndpoints","TextInputsettings","Button","ConfigureProfile","showConfiguration","setShowConfiguration","description","setDescription","contextUser","wrapperRef","pictureRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDescriptionChange","value","handleChangePicture","file","files","response","postPicture","location","modifUser","user","update","setUser","onConfigurationSubmit","preventDefault","modifiedUser","imagePicker","imageButton","click","imageWrapper","changeImageText","hiddenInput","configurationForm","formWrapper","buttonWrapper","configureProfileContainer","iconButton","profileIcon","configurationTargetShow","configurationTargetHide"],"mappings":"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","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport { User } from '../../../interfaces/User';\nimport * as userEndpoints from '../../../endpoints/user';\nimport * as uploadEndpoints from '../../../endpoints/upload';\nimport TextInputsettings from '../../TextInputSettings';\nimport Button from '../../Button';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [description, setDescription] = useState<string | undefined>('');\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the profile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Ref for the input to select picture\n  const pictureRef = useRef<HTMLInputElement>(null);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        setShowConfiguration(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n  };\n\n  const handleChangePicture = async () => {\n    const file: File = pictureRef?.current?.files![0]!;\n    const response: { location?: string } = await uploadEndpoints.postPicture(file!);\n    if (response.location) {\n      const modifUser: User = { ...contextUser.user!, profileImage: response.location };\n      // Updates profile image url in database\n      userEndpoints.update(modifUser);\n      // Updates profile image url in context user\n      contextUser.setUser(modifUser);\n    }\n  };\n\n  const onConfigurationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // Updates description in database\n    const modifiedUser: User = { ...contextUser.user!, description };\n    // Updates description in database\n    userEndpoints.update(modifiedUser);\n    // Updates description in context user\n    contextUser.setUser(modifiedUser);\n  };\n\n  const imagePicker = (\n    <>\n      <button\n        className={styles.imageButton}\n        type=\"button\"\n        onClick={() => pictureRef?.current?.click()}\n      >\n        <img\n          className={styles.imageWrapper}\n          src={contextUser?.user?.profileImage || profileImage}\n          alt=\"Profile\"\n        />\n        <span className={styles.changeImageText}>Change Profile Photo</span>\n      </button>\n      <input\n        className={styles.hiddenInput}\n        accept=\".png, .jpg, .jpeg\"\n        type=\"file\"\n        ref={pictureRef}\n        onChange={handleChangePicture}\n      />\n    </>\n  );\n\n  const configurationForm = (\n    <>\n      <form\n        onSubmit={onConfigurationSubmit}\n        className={styles.formWrapper}\n      >\n        <TextInputsettings\n          placeholder=\"Description\"\n          textLabel=\"Description\"\n          idInput=\"descriptionInput\"\n          type=\"text\"\n          initialValue={contextUser?.user?.description || 'What is going on?'}\n          onChange={handleDescriptionChange}\n        />\n        <div\n          className={styles.buttonWrapper}\n        >\n          <Button\n            backgroundFull\n            text=\"Save\"\n            color=\"blue\"\n            type=\"submit\"\n            small\n          />\n        </div>\n      </form>\n    </>\n  );\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={() => setShowConfiguration(true)}\n        >\n          {\n            contextUser?.user?.profileImage ? (\n              <img\n                className={styles.imageWrapper}\n                src={contextUser?.user?.profileImage || profileImage}\n                alt=\"Profile\"\n              />\n            )\n              : <FiUser className={styles.profileIcon} />\n          }\n        </button>\n        <div\n          ref={wrapperRef}\n          className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide}\n        >\n          {imagePicker}\n          {configurationForm}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}