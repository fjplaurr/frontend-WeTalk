{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBar.component.tsx\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport SearchBarTextInput from './SearchBarTextInput';\nimport ProfileCard from '../ProfileCard';\nimport * as userEndpoints from '../../endpoints/user';\nimport { Search } from '../../assets/icons';\nimport styles from './SearchBar.module.scss';\nimport { UserContext } from '../../containers/App';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userResults, setUserResults] = useState([]); // Ref for the broken down results div\n\n  const wrapperRef = useRef(null); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Sets searched term while writing\n\n  const handleChange = e => {\n    console.log('writing');\n    setSearchTerm(e.currentTarget.value);\n  }; // Makes a search every time the user inputs a carachter\n\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users = await userEndpoints.getFilteredUsers(searchTerm);\n      setUserResults(users);\n    }; // Performs search only if the searchTerm is not empty. If it is not\n    // empty (e.g., cleaning the input), then the results must change to empty\n\n\n    if (searchTerm) {\n      fetchUsers();\n    } else {\n      setUserResults([]);\n    }\n  }, [searchTerm]);\n\n  const handleUnfollow = (event, clickedUser) => {\n    const updateFollowing = async () => {\n      const followingModified = contextUser.user.following.filter(el => el.user !== clickedUser._id);\n      const modifiedUser = { ...contextUser.user,\n        following: followingModified\n      }; // Modify user in context\n\n      await contextUser.setUser(modifiedUser); // Modify list of followed users in database\n\n      await userEndpoints.update(modifiedUser);\n    };\n\n    const updateFollowers = async () => {\n      const followersModified = clickedUser.followers.filter(el => el.user !== contextUser.user._id);\n      const modifiedUser = { ...clickedUser,\n        followers: followersModified\n      }; // Modify list of followers in database\n\n      await userEndpoints.update(modifiedUser);\n    };\n\n    updateFollowing();\n    updateFollowers();\n  };\n\n  const handleFollow = async (event, clickedUser) => {\n    const updateFollowing = async () => {\n      const contextUserCopy = { ...contextUser.user\n      };\n      contextUserCopy.following.push({\n        user: clickedUser._id\n      }); // Modify user in context\n\n      await contextUser.setUser(contextUserCopy); // Modify list of followed users in database\n\n      await userEndpoints.update(contextUserCopy);\n    };\n\n    const updateFollowers = async () => {\n      const clickedUserCopy = { ...clickedUser\n      };\n      clickedUserCopy.followers.push({\n        user: contextUser.user._id\n      }); // Modify list of followers in database\n\n      await userEndpoints.update(clickedUserCopy);\n    };\n\n    await updateFollowing();\n    await updateFollowers();\n  };\n\n  const usersList = userResults.map(user => {\n    var _contextUser$user, _contextUser$user2;\n\n    // If the user finds his/her own profile, then doesn't render a follow/unfollow button\n    if (((_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : _contextUser$user._id) === user._id) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: user._id,\n        className: styles.cardWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProfileCard, {\n        description: user.description,\n        name: user.name,\n        surname: user.surname,\n        picture: user.profileImage,\n        id: user._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    const usersFollowing = (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.following;\n    const allUserIds = usersFollowing === null || usersFollowing === void 0 ? void 0 : usersFollowing.map(element => element.user);\n    const isFollowing = allUserIds === null || allUserIds === void 0 ? void 0 : allUserIds.includes(user._id);\n\n    if (isFollowing) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: user._id,\n        className: styles.cardWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ProfileCard, {\n        description: user.description,\n        name: user.name,\n        surname: user.surname,\n        picture: user.profileImage,\n        id: user._id,\n        onClick: e => handleUnfollow(e, user),\n        textButton: \"Unfollow\",\n        colorButton: \"red\",\n        backgroundFull: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: user._id,\n      className: styles.cardWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProfileCard, {\n      description: user.description,\n      name: user.name,\n      surname: user.surname,\n      picture: user.profileImage,\n      id: user._id,\n      onClick: e => handleFollow(e, user),\n      textButton: \"Follow\",\n      colorButton: \"blue\",\n      backgroundFull: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }));\n  }); // Sets if the user is writing in the search input or not\n\n  useEffect(() => {\n    if (searchTerm) {\n      contextUser.setIsSearching(true);\n    } else {\n      contextUser.setIsSearching(false);\n    }\n  }, [searchTerm, contextUser]); // Closes the search results if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        contextUser.setIsSearching(false);\n        setSearchTerm('');\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef, contextUser]);\n\n  const brokenDownSearch = () => {\n    if (contextUser.isSearching && userResults.length > 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.resultsWrapperShow,\n        ref: wrapperRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, usersList);\n    }\n\n    if (contextUser.isSearching && userResults.length === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.resultsWrapperShow,\n        ref: wrapperRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.cardWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, \"No results found.\"));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, \" \");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.searchBarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SearchBarTextInput, {\n    idInput: \"searchBar\",\n    type: \"text\",\n    placeholder: \"Search\",\n    onChange: handleChange,\n    color: \"white\",\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  })), brokenDownSearch());\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/SearchBar/SearchBar.component.tsx"],"names":["React","useState","useEffect","useContext","useRef","SearchBarTextInput","ProfileCard","userEndpoints","Search","styles","UserContext","SearchBar","searchTerm","setSearchTerm","userResults","setUserResults","wrapperRef","contextUser","handleChange","e","console","log","currentTarget","value","fetchUsers","users","getFilteredUsers","handleUnfollow","event","clickedUser","updateFollowing","followingModified","user","following","filter","el","_id","modifiedUser","setUser","update","updateFollowers","followersModified","followers","handleFollow","contextUserCopy","push","clickedUserCopy","usersList","map","cardWrapper","description","name","surname","profileImage","usersFollowing","allUserIds","element","isFollowing","includes","setIsSearching","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","brokenDownSearch","isSearching","length","resultsWrapperShow","searchBarWrapper"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,SADZ,EACuBC,UADvB,EACmCC,MADnC,QAEO,OAFP;AAGA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAS,EAAT,CAA9C,CAFsB,CAItB;;AACA,QAAMe,UAAU,GAAGZ,MAAM,CAAiB,IAAjB,CAAzB,CALsB,CAOtB;;AACA,QAAMa,WAAW,GAAGd,UAAU,CAACO,WAAD,CAA9B,CARsB,CAUtB;;AACA,QAAMQ,YAAY,GAAIC,CAAD,IAA4C;AAC/DC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAR,IAAAA,aAAa,CAACM,CAAC,CAACG,aAAF,CAAgBC,KAAjB,CAAb;AACD,GAHD,CAXsB,CAgBtB;;;AACArB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMsB,UAAU,GAAG,YAAY;AAC7B,YAAMC,KAAa,GAAG,MAAMlB,aAAa,CAACmB,gBAAd,CAA+Bd,UAA/B,CAA5B;AACAG,MAAAA,cAAc,CAACU,KAAD,CAAd;AACD,KAHD,CADc,CAKd;AACA;;;AACA,QAAIb,UAAJ,EAAgB;AACdY,MAAAA,UAAU;AACX,KAFD,MAEO;AACLT,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GAZQ,EAYN,CAACH,UAAD,CAZM,CAAT;;AAcA,QAAMe,cAAc,GAAG,CAACC,KAAD,EAA6CC,WAA7C,KAAmE;AACxF,UAAMC,eAAe,GAAG,YAAY;AAClC,YAAMC,iBAAiB,GAAGd,WAAW,CAACe,IAAZ,CAAkBC,SAAlB,CACvBC,MADuB,CACfC,EAAD,IAA0BA,EAAE,CAACH,IAAH,KAAYH,WAAW,CAACO,GADlC,CAA1B;AAEA,YAAMC,YAAkB,GAAG,EAAE,GAAGpB,WAAW,CAACe,IAAjB;AAAwBC,QAAAA,SAAS,EAAEF;AAAnC,OAA3B,CAHkC,CAIlC;;AACA,YAAMd,WAAW,CAACqB,OAAZ,CAAoBD,YAApB,CAAN,CALkC,CAMlC;;AACA,YAAM9B,aAAa,CAACgC,MAAd,CAAqBF,YAArB,CAAN;AACD,KARD;;AASA,UAAMG,eAAe,GAAG,YAAY;AAClC,YAAMC,iBAAiB,GAAGZ,WAAW,CAACa,SAAZ,CACvBR,MADuB,CACfC,EAAD,IAA0BA,EAAE,CAACH,IAAH,KAAYf,WAAW,CAACe,IAAZ,CAAkBI,GADxC,CAA1B;AAEA,YAAMC,YAAkB,GAAG,EAAE,GAAGR,WAAL;AAAmBa,QAAAA,SAAS,EAAED;AAA9B,OAA3B,CAHkC,CAIlC;;AACA,YAAMlC,aAAa,CAACgC,MAAd,CAAqBF,YAArB,CAAN;AACD,KAND;;AAOAP,IAAAA,eAAe;AACfU,IAAAA,eAAe;AAChB,GAnBD;;AAqBA,QAAMG,YAAY,GAAG,OAAOf,KAAP,EAAmDC,WAAnD,KAAyE;AAC5F,UAAMC,eAAe,GAAG,YAAY;AAClC,YAAMc,eAAqB,GAAG,EAAE,GAAG3B,WAAW,CAAEe;AAAlB,OAA9B;AACAY,MAAAA,eAAe,CAACX,SAAhB,CAA2BY,IAA3B,CAAgC;AAAEb,QAAAA,IAAI,EAAEH,WAAW,CAACO;AAApB,OAAhC,EAFkC,CAGlC;;AACA,YAAMnB,WAAW,CAACqB,OAAZ,CAAoBM,eAApB,CAAN,CAJkC,CAKlC;;AACA,YAAMrC,aAAa,CAACgC,MAAd,CAAqBK,eAArB,CAAN;AACD,KAPD;;AAQA,UAAMJ,eAAe,GAAG,YAAY;AAClC,YAAMM,eAAqB,GAAG,EAAE,GAAGjB;AAAL,OAA9B;AACAiB,MAAAA,eAAe,CAACJ,SAAhB,CAA2BG,IAA3B,CAAgC;AAAEb,QAAAA,IAAI,EAAEf,WAAW,CAAEe,IAAb,CAAmBI;AAA3B,OAAhC,EAFkC,CAGlC;;AACA,YAAM7B,aAAa,CAACgC,MAAd,CAAqBO,eAArB,CAAN;AACD,KALD;;AAMA,UAAMhB,eAAe,EAArB;AACA,UAAMU,eAAe,EAArB;AACD,GAjBD;;AAmBA,QAAMO,SAAS,GAAGjC,WAAW,CAACkC,GAAZ,CAAiBhB,IAAD,IAAgB;AAAA;;AAChD;AACA,QAAI,sBAAAf,WAAW,CAACe,IAAZ,wEAAkBI,GAAlB,MAA0BJ,IAAI,CAACI,GAAnC,EAAwC;AACtC,0BACE;AACE,QAAA,GAAG,EAAEJ,IAAI,CAACI,GADZ;AAEE,QAAA,SAAS,EAAE3B,MAAM,CAACwC,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAEjB,IAAI,CAACkB,WADpB;AAEE,QAAA,IAAI,EAAElB,IAAI,CAACmB,IAFb;AAGE,QAAA,OAAO,EAAEnB,IAAI,CAACoB,OAHhB;AAIE,QAAA,OAAO,EAAEpB,IAAI,CAACqB,YAJhB;AAKE,QAAA,EAAE,EAAErB,IAAI,CAACI,GALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAcD;;AACD,UAAMkB,cAAc,yBAAGrC,WAAW,CAACe,IAAf,uDAAG,mBAAkBC,SAAzC;AACA,UAAMsB,UAAU,GAAGD,cAAH,aAAGA,cAAH,uBAAGA,cAAc,CAAEN,GAAhB,CAAqBQ,OAAD,IAA+BA,OAAO,CAACxB,IAA3D,CAAnB;AACA,UAAMyB,WAAW,GAAGF,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEG,QAAZ,CAAqB1B,IAAI,CAACI,GAA1B,CAApB;;AACA,QAAIqB,WAAJ,EAAiB;AACf,0BACE;AACE,QAAA,GAAG,EAAEzB,IAAI,CAACI,GADZ;AAEE,QAAA,SAAS,EAAE3B,MAAM,CAACwC,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAEjB,IAAI,CAACkB,WADpB;AAEE,QAAA,IAAI,EAAElB,IAAI,CAACmB,IAFb;AAGE,QAAA,OAAO,EAAEnB,IAAI,CAACoB,OAHhB;AAIE,QAAA,OAAO,EAAEpB,IAAI,CAACqB,YAJhB;AAKE,QAAA,EAAE,EAAErB,IAAI,CAACI,GALX;AAME,QAAA,OAAO,EAAGjB,CAAD,IAAOQ,cAAc,CAACR,CAAD,EAAIa,IAAJ,CANhC;AAOE,QAAA,UAAU,EAAC,UAPb;AAQE,QAAA,WAAW,EAAC,KARd;AASE,QAAA,cAAc,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAkBD;;AACD,wBACE;AACE,MAAA,GAAG,EAAEA,IAAI,CAACI,GADZ;AAEE,MAAA,SAAS,EAAE3B,MAAM,CAACwC,WAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,WAAD;AACE,MAAA,WAAW,EAAEjB,IAAI,CAACkB,WADpB;AAEE,MAAA,IAAI,EAAElB,IAAI,CAACmB,IAFb;AAGE,MAAA,OAAO,EAAEnB,IAAI,CAACoB,OAHhB;AAIE,MAAA,OAAO,EAAEpB,IAAI,CAACqB,YAJhB;AAKE,MAAA,EAAE,EAAErB,IAAI,CAACI,GALX;AAME,MAAA,OAAO,EAAGjB,CAAD,IAAOwB,YAAY,CAACxB,CAAD,EAAIa,IAAJ,CAN9B;AAOE,MAAA,UAAU,EAAC,QAPb;AAQE,MAAA,WAAW,EAAC,MARd;AASE,MAAA,cAAc,MAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAkBD,GA3DiB,CAAlB,CAvEsB,CAoItB;;AACA9B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,UAAJ,EAAgB;AACdK,MAAAA,WAAW,CAAC0C,cAAZ,CAA2B,IAA3B;AACD,KAFD,MAEO;AACL1C,MAAAA,WAAW,CAAC0C,cAAZ,CAA2B,KAA3B;AACD;AACF,GANQ,EAMN,CAAC/C,UAAD,EAAaK,WAAb,CANM,CAAT,CArIsB,CA6ItB;;AACAf,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAM0D,kBAAkB,GAAIhC,KAAD,IAAuB;AAChD;AACA,UAAIZ,UAAU,CAAC6C,OAAX,IAAsB,CAAC7C,UAAU,CAAC6C,OAAX,CAAmBC,QAAnB,CAA4BlC,KAAK,CAACmC,MAAlC,CAA3B,EAA8E;AAC5E9C,QAAAA,WAAW,CAAC0C,cAAZ,CAA2B,KAA3B;AACA9C,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAND,CAFc,CASd;;;AACAmD,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCL,kBAAvC;AACA,WAAO,MAAM;AACX;AACAI,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CN,kBAA1C;AACD,KAHD;AAID,GAfQ,EAeN,CAAC5C,UAAD,EAAaC,WAAb,CAfM,CAAT;;AAiBA,QAAMkD,gBAAgB,GAAG,MAAM;AAC7B,QAAIlD,WAAW,CAACmD,WAAZ,IAA2BtD,WAAW,CAACuD,MAAZ,GAAqB,CAApD,EAAuD;AACrD,0BACE;AAAK,QAAA,SAAS,EAAE5D,MAAM,CAAC6D,kBAAvB;AAA2C,QAAA,GAAG,EAAEtD,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG+B,SADH,CADF;AAKD;;AACD,QAAI9B,WAAW,CAACmD,WAAZ,IAA2BtD,WAAW,CAACuD,MAAZ,KAAuB,CAAtD,EAAyD;AACvD,0BACE;AAAK,QAAA,SAAS,EAAE5D,MAAM,CAAC6D,kBAAvB;AAA2C,QAAA,GAAG,EAAEtD,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEP,MAAM,CAACwC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF;AAOD;;AACD,wBAAO,8CAAP;AACD,GAlBD;;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAExC,MAAM,CAAC8D,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAErD,YAJZ;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,SAAS,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAYGiD,gBAAgB,EAZnB,CADF;AAgBD,CAnMD;;AAqMA,eAAexD,SAAf","sourcesContent":["import React, {\n  useState, useEffect, useContext, useRef,\n} from 'react';\nimport SearchBarTextInput from './SearchBarTextInput';\nimport ProfileCard from '../ProfileCard';\nimport { User } from '../../interfaces/User';\nimport * as userEndpoints from '../../endpoints/user';\nimport { Search } from '../../assets/icons';\nimport styles from './SearchBar.module.scss';\nimport { UserContext } from '../../containers/App';\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [userResults, setUserResults] = useState<User[]>([]);\n\n  // Ref for the broken down results div\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Sets searched term while writing\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log('writing')\n    setSearchTerm(e.currentTarget.value);\n  };\n\n  // Makes a search every time the user inputs a carachter\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const users: User[] = await userEndpoints.getFilteredUsers(searchTerm);\n      setUserResults(users);\n    };\n    // Performs search only if the searchTerm is not empty. If it is not\n    // empty (e.g., cleaning the input), then the results must change to empty\n    if (searchTerm) {\n      fetchUsers();\n    } else {\n      setUserResults([]);\n    }\n  }, [searchTerm]);\n\n  const handleUnfollow = (event: React.MouseEvent<HTMLButtonElement>, clickedUser: User) => {\n    const updateFollowing = async () => {\n      const followingModified = contextUser.user!.following!\n        .filter((el: { user: string }) => el.user !== clickedUser._id);\n      const modifiedUser: User = { ...contextUser.user!, following: followingModified };\n      // Modify user in context\n      await contextUser.setUser(modifiedUser);\n      // Modify list of followed users in database\n      await userEndpoints.update(modifiedUser);\n    };\n    const updateFollowers = async () => {\n      const followersModified = clickedUser.followers!\n        .filter((el: { user: string }) => el.user !== contextUser.user!._id);\n      const modifiedUser: User = { ...clickedUser!, followers: followersModified };\n      // Modify list of followers in database\n      await userEndpoints.update(modifiedUser);\n    };\n    updateFollowing();\n    updateFollowers();\n  };\n\n  const handleFollow = async (event: React.MouseEvent<HTMLButtonElement>, clickedUser: User) => {\n    const updateFollowing = async () => {\n      const contextUserCopy: User = { ...contextUser!.user! };\n      contextUserCopy.following!.push({ user: clickedUser._id! });\n      // Modify user in context\n      await contextUser.setUser(contextUserCopy);\n      // Modify list of followed users in database\n      await userEndpoints.update(contextUserCopy);\n    };\n    const updateFollowers = async () => {\n      const clickedUserCopy: User = { ...clickedUser };\n      clickedUserCopy.followers!.push({ user: contextUser!.user!._id! });\n      // Modify list of followers in database\n      await userEndpoints.update(clickedUserCopy);\n    };\n    await updateFollowing();\n    await updateFollowers();\n  };\n\n  const usersList = userResults.map((user: User) => {\n    // If the user finds his/her own profile, then doesn't render a follow/unfollow button\n    if (contextUser.user?._id === user._id) {\n      return (\n        <div\n          key={user._id}\n          className={styles.cardWrapper}\n        >\n          <ProfileCard\n            description={user.description}\n            name={user.name}\n            surname={user.surname}\n            picture={user.profileImage}\n            id={user._id!}\n          />\n        </div>\n      );\n    }\n    const usersFollowing = contextUser.user?.following;\n    const allUserIds = usersFollowing?.map((element: { user: string }) => element.user);\n    const isFollowing = allUserIds?.includes(user._id!);\n    if (isFollowing) {\n      return (\n        <div\n          key={user._id}\n          className={styles.cardWrapper}\n        >\n          <ProfileCard\n            description={user.description}\n            name={user.name}\n            surname={user.surname}\n            picture={user.profileImage}\n            id={user._id!}\n            onClick={(e) => handleUnfollow(e, user)}\n            textButton=\"Unfollow\"\n            colorButton=\"red\"\n            backgroundFull\n          />\n        </div>\n      );\n    }\n    return (\n      <div\n        key={user._id}\n        className={styles.cardWrapper}\n      >\n        <ProfileCard\n          description={user.description}\n          name={user.name}\n          surname={user.surname}\n          picture={user.profileImage}\n          id={user._id!}\n          onClick={(e) => handleFollow(e, user)}\n          textButton=\"Follow\"\n          colorButton=\"blue\"\n          backgroundFull\n        />\n      </div>\n    );\n  });\n\n  // Sets if the user is writing in the search input or not\n  useEffect(() => {\n    if (searchTerm) {\n      contextUser.setIsSearching(true);\n    } else {\n      contextUser.setIsSearching(false);\n    }\n  }, [searchTerm, contextUser]);\n\n  // Closes the search results if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        contextUser.setIsSearching(false);\n        setSearchTerm('');\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef, contextUser]);\n\n  const brokenDownSearch = () => {\n    if (contextUser.isSearching && userResults.length > 0) {\n      return (\n        <div className={styles.resultsWrapperShow} ref={wrapperRef}>\n          {usersList}\n        </div>\n      );\n    }\n    if (contextUser.isSearching && userResults.length === 0) {\n      return (\n        <div className={styles.resultsWrapperShow} ref={wrapperRef}>\n          <div className={styles.cardWrapper}>\n            No results found.\n          </div>\n        </div>\n      );\n    }\n    return <> </>;\n  };\n\n  return (\n    <div className={styles.searchBarWrapper}>\n      <SearchBarTextInput\n        idInput=\"searchBar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={handleChange}\n        color=\"white\"\n        maxLength={50}\n      >\n        <Search />\n      </SearchBarTextInput>\n      {/* Show div with results when the results array has data */}\n      {brokenDownSearch()}\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}