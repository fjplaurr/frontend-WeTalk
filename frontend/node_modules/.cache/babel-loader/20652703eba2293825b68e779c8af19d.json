{"ast":null,"code":"import { useContext } from 'react';\nimport { UserContext } from '../containers/App';\nimport { loadUser } from '../helpers/localStorage';\nimport * as userEndpoints from '../endpoints/user';\n\nconst useUser = () => {\n  const localStoredUser = loadUser();\n  console.log('localStoredUser');\n  console.log(localStoredUser);\n\n  if (localStoredUser) {\n    const fetchUser = async () => {\n      const res = await userEndpoints.getSingle(localStoredUser.id);\n      await currentUser.setUser(res);\n      return {\n        user: currentUser.user,\n        setUser: currentUser.setUser\n      };\n    };\n\n    fetchUser();\n  }\n\n  const currentUser = useContext(UserContext);\n  return {\n    user: currentUser.user,\n    setUser: currentUser.setUser\n  };\n};\n\nexport default useUser;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/customHooks/useUser.tsx"],"names":["useContext","UserContext","loadUser","userEndpoints","useUser","localStoredUser","console","log","fetchUser","res","getSingle","id","currentUser","setUser","user"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,QAAT,QAAmC,yBAAnC;AACA,OAAO,KAAKC,aAAZ,MAA+B,mBAA/B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAMC,eAAe,GAAGH,QAAQ,EAAhC;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AACA,MAAIA,eAAJ,EAAqB;AACnB,UAAMG,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMN,aAAa,CAACO,SAAd,CAAwBL,eAAe,CAACM,EAAxC,CAAlB;AACA,YAAMC,WAAW,CAACC,OAAZ,CAAoBJ,GAApB,CAAN;AACA,aAAO;AAAEK,QAAAA,IAAI,EAAEF,WAAW,CAACE,IAApB;AAA0BD,QAAAA,OAAO,EAAED,WAAW,CAACC;AAA/C,OAAP;AACD,KAJD;;AAKAL,IAAAA,SAAS;AACV;;AACD,QAAMI,WAAW,GAAGZ,UAAU,CAACC,WAAD,CAA9B;AACA,SAAO;AAAEa,IAAAA,IAAI,EAAEF,WAAW,CAACE,IAApB;AAA0BD,IAAAA,OAAO,EAAED,WAAW,CAACC;AAA/C,GAAP;AACD,CAdD;;AAgBA,eAAeT,OAAf","sourcesContent":["import { useContext } from 'react';\nimport { UserContext } from '../containers/App';\nimport { loadUser, saveUser } from '../helpers/localStorage';\nimport * as userEndpoints from '../endpoints/user';\n\nconst useUser = () => {\n  const localStoredUser = loadUser();\n  console.log('localStoredUser')\n  console.log(localStoredUser)\n  if (localStoredUser) {\n    const fetchUser = async () => {\n      const res = await userEndpoints.getSingle(localStoredUser.id!);\n      await currentUser.setUser(res);\n      return { user: currentUser.user, setUser: currentUser.setUser };\n    };\n    fetchUser();\n  }\n  const currentUser = useContext(UserContext);\n  return { user: currentUser.user, setUser: currentUser.setUser };\n};\n\nexport default useUser;\n"]},"metadata":{},"sourceType":"module"}