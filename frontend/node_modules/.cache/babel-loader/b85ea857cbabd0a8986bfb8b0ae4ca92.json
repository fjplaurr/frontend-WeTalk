{"ast":null,"code":"// Gets generic data\nconst get = async url => {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n}; // Posts generic data\n\n\nconst post = async (url, data) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n}; // Puts generic data\n\n\nconst put = async (url, data) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'PUT',\n    body,\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n}; // Deletes single file by id\n\n\nconst deleteById = async url => {\n  const request = {\n    method: 'DELETE'\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n}; // Posts a file using FormData\n\n\nconst postFile = async (url, file) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  const request = {\n    method: 'POST',\n    body: formData\n  };\n  const response = await fetch(url, request);\n  return response;\n};\n\nexport { get, post, put, deleteById, postFile };","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/helpers/fetch.ts"],"names":["get","url","response","fetch","json","post","data","body","JSON","stringify","request","method","headers","put","deleteById","postFile","file","formData","FormData","append"],"mappings":"AAAA;AACA,MAAMA,GAAG,GAAG,MAAOC,GAAP,IAAuB;AACjC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAJD,C,CAMA;;;AACA,MAAMC,IAAI,GAAG,OAAOJ,GAAP,EAAoBK,IAApB,KAAiC;AAC5C,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb;AACA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdJ,IAAAA,IAFc;AAGdK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHK,GAAhB;AAOA,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAZD,C,CAcA;;;AACA,MAAMS,GAAG,GAAG,OAAOZ,GAAP,EAAoBK,IAApB,KAAiC;AAC3C,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAb;AACA,QAAMI,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,KADM;AAEdJ,IAAAA,IAFc;AAGdK,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHK,GAAhB;AAOA,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAZD,C,CAcA;;;AACA,MAAMU,UAAU,GAAG,MAAOb,GAAP,IAAuB;AACxC,QAAMS,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE;AADM,GAAhB;AAGA,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,QAAMN,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACA,SAAOA,IAAP;AACD,CAPD,C,CASA;;;AACA,MAAMW,QAAQ,GAAG,OAAOd,GAAP,EAAoBe,IAApB,KAAmC;AAClD,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,IAAzB;AACA,QAAMN,OAAO,GAAG;AACdC,IAAAA,MAAM,EAAE,MADM;AAEdJ,IAAAA,IAAI,EAAEU;AAFQ,GAAhB;AAIA,QAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMS,OAAN,CAA5B;AACA,SAAOR,QAAP;AACD,CATD;;AAWA,SACEF,GADF,EACOK,IADP,EACaQ,GADb,EACkBC,UADlB,EAC8BC,QAD9B","sourcesContent":["// Gets generic data\nconst get = async (url: string) => {\n  const response = await fetch(url);\n  const json = await response.json();\n  return json;\n};\n\n// Posts generic data\nconst post = async (url: string, data: {}) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'POST',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\n// Puts generic data\nconst put = async (url: string, data: {}) => {\n  const body = JSON.stringify(data);\n  const request = {\n    method: 'PUT',\n    body,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\n// Deletes single file by id\nconst deleteById = async (url: string) => {\n  const request = {\n    method: 'DELETE',\n  };\n  const response = await fetch(url, request);\n  const json = await response.json();\n  return json;\n};\n\n// Posts a file using FormData\nconst postFile = async (url: string, file: File) => {\n  const formData = new FormData();\n  formData.append('image', file);\n  const request = {\n    method: 'POST',\n    body: formData,\n  };\n  const response = await fetch(url, request);\n  return response;\n};\n\nexport {\n  get, post, put, deleteById, postFile,\n};\n"]},"metadata":{},"sourceType":"module"}