{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\n\nconst ConfigureProfile = () => {\n  var _contextUser$user, _contextUser$user2, _contextUser$user3, _contextUser$user4;\n\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [image, setImage] = useState();\n  const [hasChangedImage, setHasChangedImage] = useState(false);\n  const [hasChangedDescription, setHasChangedDescription] = useState(false);\n  const [description, setDescription] = useState(''); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the profile configuration window\n\n  const wrapperRef = useRef(null); // Ref for the input to select picture\n\n  const pictureRef = useRef(null); // // Changes URL and description every time the context user is updated\n  // useEffect(() => {\n  //   setImage(contextUser.user?.profileImage);\n  //   setDescription(contextUser.user?.description!);\n  // }, [contextUser.user]);\n  // Closes the profile configuration window if the user clicks outside\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        setShowConfiguration(false);\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n    setHasChangedDescription(true);\n  };\n\n  const handleChangePicture = () => {\n    var _pictureRef$current, _pictureRef$current2;\n\n    console.log(pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current = pictureRef.current) === null || _pictureRef$current === void 0 ? void 0 : _pictureRef$current.files);\n    const file = (pictureRef === null || pictureRef === void 0 ? void 0 : (_pictureRef$current2 = pictureRef.current) === null || _pictureRef$current2 === void 0 ? void 0 : _pictureRef$current2.files)[0];\n    setImage(file);\n    setHasChangedImage(true);\n  };\n\n  const onConfigurationSubmit = async event => {\n    event.preventDefault();\n\n    if (hasChangedDescription) {\n      // Updates description in database\n      const modifiedUser = { ...contextUser.user,\n        description\n      }; // Updates description in context user\n\n      contextUser.setUser(modifiedUser);\n    }\n\n    if (hasChangedImage) {\n      // Updates profile image in database\n      contextUser.setUser('https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'); // const userToUpdate: User = { ...contextUser.user! };\n      // const userUpdated: User = await userEndpoints.updateImageProfile(image!, userToUpdate!._id!, 'nose');\n      // const imageUrl: string = await userEndpoints.getImageProfile(userUpdated.profileImage as string);\n      // // Updates profile image in context user\n      // const modifiedUser: User = { ...contextUser.user!, profileImage: imageUrl };\n      // contextUser.setUser(modifiedUser);\n    }\n  };\n\n  const configurationForm = /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onConfigurationSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user = contextUser.user) === null || _contextUser$user === void 0 ? void 0 : _contextUser$user.description) || 'What is going on?',\n    onChange: handleDescriptionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    ref: pictureRef,\n    onChange: handleChangePicture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, \"Env\\xEDa\"), /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Profile\",\n    style: {\n      marginTop: '50px',\n      height: '200px',\n      width: '200px'\n    },\n    src: (_contextUser$user2 = contextUser.user) === null || _contextUser$user2 === void 0 ? void 0 : _contextUser$user2.profileImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: () => setShowConfiguration(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.imageWrapper,\n    style: {\n      backgroundImage: (contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user3 = contextUser.user) === null || _contextUser$user3 === void 0 ? void 0 : _contextUser$user3.profileImage) ? `url(${contextUser === null || contextUser === void 0 ? void 0 : (_contextUser$user4 = contextUser.user) === null || _contextUser$user4 === void 0 ? void 0 : _contextUser$user4.profileImage})` : `url(${profileImage})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }), configurationForm)));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useState","useEffect","useRef","useContext","FiUser","styles","UserContext","profileImage","ConfigureProfile","showConfiguration","setShowConfiguration","image","setImage","hasChangedImage","setHasChangedImage","hasChangedDescription","setHasChangedDescription","description","setDescription","contextUser","wrapperRef","pictureRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleDescriptionChange","value","handleChangePicture","console","log","files","file","onConfigurationSubmit","preventDefault","modifiedUser","user","setUser","configurationForm","marginTop","height","width","configureProfileContainer","iconButton","profileIcon","configurationTargetShow","configurationTargetHide","imageWrapper","backgroundImage"],"mappings":";AAAA,OAAOA,KAAP,IACEC,QADF,EACYC,SADZ,EACuBC,MADvB,EAC+BC,UAD/B,QAEO,OAFP;AAGA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AAIA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACe,qBAAD,EAAwBC,wBAAxB,IAAoDhB,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAqB,EAArB,CAA9C,CAL6B,CAO7B;;AACA,QAAMmB,WAAW,GAAGhB,UAAU,CAACG,WAAD,CAA9B,CAR6B,CAU7B;;AACA,QAAMc,UAAU,GAAGlB,MAAM,CAAiB,IAAjB,CAAzB,CAX6B,CAa7B;;AACA,QAAMmB,UAAU,GAAGnB,MAAM,CAAmB,IAAnB,CAAzB,CAd6B,CAgB7B;AACA;AACA;AACA;AACA;AAEA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMqB,kBAAkB,GAAIC,KAAD,IAAuB;AAChD;AACA,UAAIH,UAAU,CAACI,OAAX,IAAsB,CAACJ,UAAU,CAACI,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAA3B,EAA8E;AAC5EhB,QAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,KALD,CAFc,CAQd;;;AACAiB,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,WAAO,MAAM;AACX;AACAK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,KAHD;AAID,GAdQ,EAcN,CAACF,UAAD,CAdM,CAAT;;AAgBA,QAAMU,uBAAuB,GAAIP,KAAD,IAAgD;AAC9EL,IAAAA,cAAc,CAACK,KAAK,CAACG,MAAN,CAAaK,KAAd,CAAd;AACAf,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,GAHD;;AAKA,QAAMgB,mBAAmB,GAAG,MAAM;AAAA;;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ,aAAYA,UAAZ,8CAAYA,UAAU,CAAEG,OAAxB,wDAAY,oBAAqBW,KAAjC;AACA,UAAMC,IAAU,GAAG,CAAAf,UAAU,SAAV,IAAAA,UAAU,WAAV,oCAAAA,UAAU,CAAEG,OAAZ,8EAAqBW,KAArB,EAA4B,CAA5B,CAAnB;AACAvB,IAAAA,QAAQ,CAACwB,IAAD,CAAR;AACAtB,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GALD;;AAOA,QAAMuB,qBAAqB,GAAG,MAAOd,KAAP,IAAmD;AAC/EA,IAAAA,KAAK,CAACe,cAAN;;AACA,QAAIvB,qBAAJ,EAA2B;AACzB;AACA,YAAMwB,YAAkB,GAAG,EAAE,GAAGpB,WAAW,CAACqB,IAAjB;AAAwBvB,QAAAA;AAAxB,OAA3B,CAFyB,CAIzB;;AACAE,MAAAA,WAAW,CAACsB,OAAZ,CAAoBF,YAApB;AACD;;AACD,QAAI1B,eAAJ,EAAqB;AACnB;AAEAM,MAAAA,WAAW,CAACsB,OAAZ,CAAoB,wGAApB,EAHmB,CAKnB;AACA;AACA;AAEA;AACA;AACA;AACD;AACF,GAtBD;;AAwBA,QAAMC,iBAAiB,gBACrB;AAAM,IAAA,QAAQ,EAAEL,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAE,CAAAlB,WAAW,SAAX,IAAAA,WAAW,WAAX,iCAAAA,WAAW,CAAEqB,IAAb,wEAAmBvB,WAAnB,KAAkC,mBAF3C;AAGE,IAAA,QAAQ,EAAEa,uBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,GAAG,EAAET,UAFP;AAGE,IAAA,QAAQ,EAAEW,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AACE,IAAA,GAAG,EAAC,SADN;AAEE,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAS,EAAE,MAAb;AAAqBC,MAAAA,MAAM,EAAE,OAA7B;AAAsCC,MAAAA,KAAK,EAAE;AAA7C,KAFT;AAGE,IAAA,GAAG,wBAAE1B,WAAW,CAACqB,IAAd,uDAAE,mBAAkBjC,YAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAqBA,sBACE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAACyC,yBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAEzC,MAAM,CAAC0C,UADpB;AAEE,IAAA,OAAO,EAAE,MAAMrC,oBAAoB,CAAC,IAAD,CAFrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEL,MAAM,CAAC2C,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE;AACE,IAAA,GAAG,EAAE5B,UADP;AAEE,IAAA,SAAS,EAAEX,iBAAiB,GAAGJ,MAAM,CAAC4C,uBAAV,GAAoC5C,MAAM,CAAC6C,uBAFzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,SAAS,EAAE7C,MAAM,CAAC8C,YADpB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,CAAAjC,WAAW,SAAX,IAAAA,WAAW,WAAX,kCAAAA,WAAW,CAAEqB,IAAb,0EAAmBjC,YAAnB,IAAmC,OAAMY,WAAP,aAAOA,WAAP,6CAAOA,WAAW,CAAEqB,IAApB,uDAAO,mBAAmBjC,YAAqB,GAAjF,GAAuF,OAAMA,YAAa;AADtH,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAUGmC,iBAVH,CAPF,CADF,CADF;AAwBD,CAxHD;;AA0HA,eAAelC,gBAAf","sourcesContent":["import React, {\n  useState, useEffect, useRef, useContext,\n} from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\nimport profileImage from '../../../assets/images/profileImage.png';\nimport { User } from '../../../interfaces/User';\nimport * as userEndpoints from '../../../endpoints/user';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  const [image, setImage] = useState<File>();\n  const [hasChangedImage, setHasChangedImage] = useState(false);\n  const [hasChangedDescription, setHasChangedDescription] = useState(false);\n  const [description, setDescription] = useState<string | undefined>('');\n\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the profile configuration window\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  // Ref for the input to select picture\n  const pictureRef = useRef<HTMLInputElement>(null);\n\n  // // Changes URL and description every time the context user is updated\n  // useEffect(() => {\n  //   setImage(contextUser.user?.profileImage);\n  //   setDescription(contextUser.user?.description!);\n  // }, [contextUser.user]);\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        setShowConfiguration(false);\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef]);\n\n  const handleDescriptionChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDescription(event.target.value);\n    setHasChangedDescription(true);\n  };\n\n  const handleChangePicture = () => {\n    console.log(pictureRef?.current?.files);\n    const file: File = pictureRef?.current?.files![0]!;\n    setImage(file);\n    setHasChangedImage(true);\n  };\n\n  const onConfigurationSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (hasChangedDescription) {\n      // Updates description in database\n      const modifiedUser: User = { ...contextUser.user!, description };\n\n      // Updates description in context user\n      contextUser.setUser(modifiedUser);\n    }\n    if (hasChangedImage) {\n      // Updates profile image in database\n\n      contextUser.setUser('https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500');\n\n      // const userToUpdate: User = { ...contextUser.user! };\n      // const userUpdated: User = await userEndpoints.updateImageProfile(image!, userToUpdate!._id!, 'nose');\n      // const imageUrl: string = await userEndpoints.getImageProfile(userUpdated.profileImage as string);\n\n      // // Updates profile image in context user\n      // const modifiedUser: User = { ...contextUser.user!, profileImage: imageUrl };\n      // contextUser.setUser(modifiedUser);\n    }\n  };\n\n  const configurationForm = (\n    <form onSubmit={onConfigurationSubmit}>\n      <input\n        type=\"text\"\n        value={contextUser?.user?.description || 'What is going on?'}\n        onChange={handleDescriptionChange}\n      />\n      <input\n        type=\"file\"\n        ref={pictureRef}\n        onChange={handleChangePicture}\n      />\n      <button type=\"submit\">Envía</button>\n      <img\n        alt=\"Profile\"\n        style={{ marginTop: '50px', height: '200px', width: '200px' }}\n        src={contextUser.user?.profileImage as string}\n      />\n    </form>\n  );\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={() => setShowConfiguration(true)}\n        >\n          <FiUser className={styles.profileIcon} />\n        </button>\n        <div\n          ref={wrapperRef}\n          className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide}\n        >\n          <div\n            className={styles.imageWrapper}\n            style={{\n              backgroundImage: contextUser?.user?.profileImage ? `url(${contextUser?.user?.profileImage as File})` : `url(${profileImage})`,\n            }}\n          />\n          {configurationForm}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}