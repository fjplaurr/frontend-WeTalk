{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/containers/Home/ReadingSection/ReadingSection.component.tsx\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport style from './ReadingSection.module.scss';\nimport PostCard from '../../../components/PostCard';\nimport { UserContext } from '../../App';\nimport * as userEndpoints from '../../../endpoints/user';\n\nconst ReadingSection = () => {\n  const [posts, setPosts] = useState([]);\n  const contextUser = useContext(UserContext); // Realoads posts from followed users every time the user\n  // changes (for instance, when following/unfollowing users).\n  // It also reloads when the user sends a post\n\n  useEffect(() => {\n    const getPostsFromAllFollowedusers = async () => {\n      const followedUsersPosts = await userEndpoints.getPostsFromFollowedUsers(contextUser.user._id);\n      const ownPosts = await userEndpoints.getUsersPosts(contextUser.user._id);\n      setPosts([...followedUsersPosts, ...ownPosts]);\n      console.log('loading all');\n    };\n\n    const getPostsFromOneUser = async () => {\n      const usersPosts = await userEndpoints.getUsersPosts(contextUser.watchingOtherProfileId);\n      setPosts([...usersPosts]);\n      console.log('loading one ');\n    };\n\n    contextUser.watchingOtherProfileId ? getPostsFromOneUser() : getPostsFromAllFollowedusers();\n  }, [contextUser]);\n  const getPosts = posts.map(post => {\n    var _post$author$profileI;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: post._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(PostCard, {\n      name: post.author.name,\n      surname: post.author.surname,\n      message: post.text,\n      pictureUrl: (_post$author$profileI = post.author.profileImage) === null || _post$author$profileI === void 0 ? void 0 : _post$author$profileI.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }));\n  });\n\n  const postsFromEveryone = () => getPosts;\n\n  const PostFromOne = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, \"WHHHSHDH getPosts\");\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: style.readingSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, contextUser.watchingOtherProfileId ? PostFromOne() : postsFromEveryone());\n};\n\nexport default ReadingSection;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/containers/Home/ReadingSection/ReadingSection.component.tsx"],"names":["React","useState","useEffect","useContext","style","PostCard","UserContext","userEndpoints","ReadingSection","posts","setPosts","contextUser","getPostsFromAllFollowedusers","followedUsersPosts","getPostsFromFollowedUsers","user","_id","ownPosts","getUsersPosts","console","log","getPostsFromOneUser","usersPosts","watchingOtherProfileId","getPosts","map","post","author","name","surname","text","profileImage","url","postsFromEveryone","PostFromOne","readingSection"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAMU,WAAW,GAAGR,UAAU,CAACG,WAAD,CAA9B,CAF2B,CAI3B;AACA;AACA;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,4BAA4B,GAAG,YAAY;AAC/C,YAAMC,kBAA0B,GAAG,MAAMN,aAAa,CAACO,yBAAd,CAAwCH,WAAW,CAACI,IAAZ,CAAkBC,GAA1D,CAAzC;AACA,YAAMC,QAAgB,GAAG,MAAMV,aAAa,CAACW,aAAd,CAA4BP,WAAW,CAACI,IAAZ,CAAkBC,GAA9C,CAA/B;AACAN,MAAAA,QAAQ,CAAC,CAAC,GAAGG,kBAAJ,EAAwB,GAAGI,QAA3B,CAAD,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KALD;;AAMA,UAAMC,mBAAmB,GAAG,YAAY;AACtC,YAAMC,UAAkB,GAAG,MAAMf,aAAa,CAACW,aAAd,CAA4BP,WAAW,CAACY,sBAAxC,CAAjC;AACAb,MAAAA,QAAQ,CAAC,CAAC,GAAGY,UAAJ,CAAD,CAAR;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,KAJD;;AAKAT,IAAAA,WAAW,CAACY,sBAAZ,GAAqCF,mBAAmB,EAAxD,GAA6DT,4BAA4B,EAAzF;AACD,GAbQ,EAaN,CAACD,WAAD,CAbM,CAAT;AAeA,QAAMa,QAAQ,GAAGf,KAAK,CAACgB,GAAN,CAAWC,IAAD;AAAA;;AAAA,wBACzB,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACV,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEU,IAAI,CAACC,MAAL,CAAYC,IADpB;AAEE,MAAA,OAAO,EAAEF,IAAI,CAACC,MAAL,CAAYE,OAFvB;AAGE,MAAA,OAAO,EAAEH,IAAI,CAACI,IAHhB;AAIE,MAAA,UAAU,2BAAEJ,IAAI,CAACC,MAAL,CAAYI,YAAd,0DAAE,sBAA0BC,GAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADyB;AAAA,GAAV,CAAjB;;AAWA,QAAMC,iBAAiB,GAAG,MAAMT,QAAhC;;AAEA,QAAMU,WAAW,GAAG,mBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF;;AAOA,sBACE;AAAS,IAAA,SAAS,EAAE9B,KAAK,CAAC+B,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,WAAW,CAACY,sBAAZ,GAAqCW,WAAW,EAAhD,GAAqDD,iBAAiB,EADzE,CADF;AAMD,CAhDD;;AAkDA,eAAezB,cAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport style from './ReadingSection.module.scss';\nimport PostCard from '../../../components/PostCard';\nimport { Post } from '../../../interfaces/Post';\nimport { UserContext } from '../../App';\nimport * as userEndpoints from '../../../endpoints/user';\n\nconst ReadingSection = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const contextUser = useContext(UserContext);\n\n  // Realoads posts from followed users every time the user\n  // changes (for instance, when following/unfollowing users).\n  // It also reloads when the user sends a post\n  useEffect(() => {\n    const getPostsFromAllFollowedusers = async () => {\n      const followedUsersPosts: Post[] = await userEndpoints.getPostsFromFollowedUsers(contextUser.user!._id!);\n      const ownPosts: Post[] = await userEndpoints.getUsersPosts(contextUser.user!._id!);\n      setPosts([...followedUsersPosts, ...ownPosts]);\n      console.log('loading all');\n    };\n    const getPostsFromOneUser = async () => {\n      const usersPosts: Post[] = await userEndpoints.getUsersPosts(contextUser.watchingOtherProfileId);\n      setPosts([...usersPosts]);\n      console.log('loading one ');\n    };\n    contextUser.watchingOtherProfileId ? getPostsFromOneUser() : getPostsFromAllFollowedusers();\n  }, [contextUser]);\n\n  const getPosts = posts.map((post: Post) => (\n    <React.Fragment key={post._id}>\n      <PostCard\n        name={post.author.name}\n        surname={post.author.surname}\n        message={post.text}\n        pictureUrl={post.author.profileImage?.url}\n      />\n    </React.Fragment>\n  ));\n\n  const postsFromEveryone = () => getPosts;\n\n  const PostFromOne = () => (\n    <div>\n      WHHHSHDH\n      getPosts\n    </div>\n  );\n\n  return (\n    <section className={style.readingSection}>\n      {contextUser.watchingOtherProfileId ? PostFromOne() : postsFromEveryone()}\n\n    </section>\n  );\n};\n\nexport default ReadingSection;\n"]},"metadata":{},"sourceType":"module"}