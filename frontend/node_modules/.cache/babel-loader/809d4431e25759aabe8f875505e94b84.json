{"ast":null,"code":"var _jsxFileName = \"/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx\";\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false); // Reads current connected user from Context\n\n  const contextUser = useContext(UserContext); // Ref for the broken down results div\n\n  const wrapperRef = useRef(null);\n\n  const handleClick = () => {\n    setShowConfiguration(true);\n  }; // Closes the profile configuration window if the user clicks outside\n\n\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = event => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        contextUser.setIsSearching(false);\n        setSearchTerm('');\n      }\n    }; // Bind the event listener\n\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef, contextUser]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.configureProfileContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: styles.iconButton,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, contextUser.user && /*#__PURE__*/React.createElement(FiUser, {\n    className: styles.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default ConfigureProfile;","map":{"version":3,"sources":["/Users/fjpu/Code/frontend-postApp/src/components/NavBar/ConfigureProfile/ConfigureProfile.component.tsx"],"names":["React","useContext","useState","useEffect","useRef","FiUser","styles","UserContext","ConfigureProfile","showConfiguration","setShowConfiguration","contextUser","wrapperRef","handleClick","handleClickOutside","event","current","contains","target","setIsSearching","setSearchTerm","document","addEventListener","removeEventListener","configureProfileContainer","iconButton","user","profileIcon","configurationTargetShow","configurationTargetHide"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,MAAjD,QAA+D,OAA/D;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CR,QAAQ,CAAC,KAAD,CAA1D,CAD6B,CAE7B;;AACA,QAAMS,WAAW,GAAGV,UAAU,CAACM,WAAD,CAA9B,CAH6B,CAK7B;;AACA,QAAMK,UAAU,GAAGR,MAAM,CAAiB,IAAjB,CAAzB;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBH,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,GAFD,CAR6B,CAY7B;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMW,kBAAkB,GAAIC,KAAD,IAAuB;AAChD;AACA,UAAIH,UAAU,CAACI,OAAX,IAAsB,CAACJ,UAAU,CAACI,OAAX,CAAmBC,QAAnB,CAA4BF,KAAK,CAACG,MAAlC,CAA3B,EAA8E;AAC5EP,QAAAA,WAAW,CAACQ,cAAZ,CAA2B,KAA3B;AACAC,QAAAA,aAAa,CAAC,EAAD,CAAb;AACD;AACF,KAND,CAFc,CASd;;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCR,kBAAvC;AACA,WAAO,MAAM;AACX;AACAO,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CT,kBAA1C;AACD,KAHD;AAID,GAfQ,EAeN,CAACF,UAAD,EAAaD,WAAb,CAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACkB,yBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAElB,MAAM,CAACmB,UADpB;AAEE,IAAA,OAAO,EAAEZ,WAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,WAAW,CAACe,IAAZ,iBAAoB,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEpB,MAAM,CAACqB,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvB,CADF,eAOE;AAAK,IAAA,GAAG,EAAEf,UAAV;AAAsB,IAAA,SAAS,EAAEH,iBAAiB,GAAGH,MAAM,CAACsB,uBAAV,GAAoCtB,MAAM,CAACuB,uBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CADF;AAaD,CA3CD;;AA6CA,eAAerB,gBAAf","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { FiUser } from 'react-icons/fi';\nimport styles from './ConfigureProfile.module.scss';\nimport { UserContext } from '../../../containers/App';\n\nconst ConfigureProfile = () => {\n  const [showConfiguration, setShowConfiguration] = useState(false);\n  // Reads current connected user from Context\n  const contextUser = useContext(UserContext);\n\n  // Ref for the broken down results div\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const handleClick = () => {\n    setShowConfiguration(true);\n  };\n\n  // Closes the profile configuration window if the user clicks outside\n  useEffect(() => {\n    // Detects if clicked on outside of element\n    const handleClickOutside = (event: MouseEvent) => {\n      // As Node used since event.target cannot be inferred to be a Node. It could have other types\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target as Node)) {\n        contextUser.setIsSearching(false);\n        setSearchTerm('');\n      }\n    };\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [wrapperRef, contextUser]);\n\n  return (\n    <div className={styles.configureProfileContainer}>\n      <div>\n        <button\n          className={styles.iconButton}\n          onClick={handleClick}\n        >\n          {contextUser.user && <FiUser className={styles.profileIcon} />}\n        </button>\n        <div ref={wrapperRef} className={showConfiguration ? styles.configurationTargetShow : styles.configurationTargetHide} />\n      </div>\n    </div>\n  );\n};\n\nexport default ConfigureProfile;\n"]},"metadata":{},"sourceType":"module"}